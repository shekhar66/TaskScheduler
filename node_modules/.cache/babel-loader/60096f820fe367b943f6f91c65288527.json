{"ast":null,"code":"var _jsxFileName = \"/home/allareddisekharreddy/Aritic/Expenses/src/Components/TaskForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useReducer } from \"react\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\nimport \"../UI/overwrite.css\";\nimport TaskReducer from \"../Reducers/TaskReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  title: \"\",\n  isTitleValid: true,\n  description: \"\",\n  isDescriptionValid: true,\n  dueDate: \"\",\n  isDueDateValid: true,\n  type: \"\",\n  isTypeValid: true\n};\n\nconst TaskForm = props => {\n  _s();\n\n  // const [title, setTitle] = useState(\"\");\n  // const [isTitleValid, setIsTitleValid] = useState(true);\n  // const [description, setDescription] = useState(\"\");\n  // const [isDescriptionValid, setIsDescriptionValid] = useState(true);\n  // const [dueDate, setDueDate] = useState(\"\");\n  // const [isDueDateValid, setIsDueDateValid] = useState(true);\n  // const [type, setType] = useState(\"\");\n  // const [isTypeValid, setIsTypeValid] = useState(true);\n  const [taskState, dispatchTaskData] = useReducer(TaskReducer, initialState);\n\n  const ValidateInput = event => {\n    switch (event.target.id) {\n      case \"task_title\":\n        dispatchTaskData({\n          type: \"validateTitle\"\n        });\n        break;\n\n      case \"task_description\":\n        dispatchTaskData({\n          type: \"validateDescription\"\n        });\n        break;\n\n      case \"task_due_date\":\n        dispatchTaskData({\n          type: \"validateDueDate\"\n        });\n        break;\n\n      case \"task_type\":\n        dispatchTaskData({\n          type: \"validateType\"\n        });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const titleChangeHandler = event => {\n    dispatchTaskData({\n      type: \"titleInput\"\n    });\n    ValidateInput(event);\n  };\n\n  const descriptionChangeHandler = event => {\n    dispatchTaskData({\n      type: \"description\"\n    });\n    ValidateInput(event);\n  };\n\n  const dueDateChangeHandler = event => {\n    dispatchTaskData({\n      type: \"dueDateInput\"\n    });\n    ValidateInput(event);\n  };\n\n  const taskTypeChangeHandler = event => {\n    dispatchTaskData({\n      type: \"typeInput\"\n    });\n    ValidateInput(event);\n  };\n\n  const addTaskHandler = event => {\n    event.preventDefault();\n\n    if (taskState.title && taskState.description && taskState.dueDate && taskState.type) {\n      props.onAddTask({\n        title: taskState.title,\n        description: taskState.description,\n        dueDate: taskState.dueDate,\n        type: taskState.type\n      });\n      setTitle(\"\");\n      setDescription(\"\");\n      setDueDate(\"\");\n      setType(\"\");\n    }\n\n    if (!taskState.title) {\n      setIsTitleValid(false);\n    }\n\n    if (!taskState.description) {\n      setIsDescriptionValid(false);\n    }\n\n    if (!taskState.dueDate) {\n      setIsDueDateValid(false);\n    }\n\n    if (!taskState.type) {\n      setIsTypeValid(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: addTaskHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: `form-label ${!isTitleValid ? \"invalid\" : \"\"}`,\n        htmlFor: \"task_title\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"task_title\",\n        type: \"text\",\n        className: `form-control ${!isTitleValid ? \"invalid\" : \"\"}`,\n        onChange: titleChangeHandler,\n        value: title,\n        placeholder: \"This field is required...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: `form-label ${!isDescriptionValid ? \"invalid\" : \"\"}`,\n        htmlFor: \"task_description\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"task_description\",\n        type: \"textarea\",\n        className: `form-control ${!isDescriptionValid ? \"invalid\" : \"\"}`,\n        onChange: descriptionChangeHandler,\n        value: description,\n        placeholder: \"This field is required...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        paddingRight: \"0px\",\n        paddingLeft: \"0px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: `form-label ${!isDueDateValid ? \"invalid\" : \"\"}`,\n            htmlFor: \"task_due_date\",\n            children: \"Closure Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"task_due_date\",\n            type: \"date\",\n            className: `form-control ${!isDueDateValid ? \"invalid\" : \"\"}`,\n            onChange: dueDateChangeHandler,\n            value: dueDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: `form-label ${!isTypeValid ? \"invalid\" : \"\"}`,\n            htmlFor: \"task_type\",\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: `form-control ${!isTypeValid ? \"invalid\" : \"\"}`,\n            id: \"task_type\",\n            onChange: taskTypeChangeHandler,\n            value: type,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Call\",\n              children: \"Call\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Meeting\",\n              children: \"Meeting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"10px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          float: \"right\",\n          marginBottom: \"8px\"\n        },\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TaskForm, \"SEfMp92jRV3u734xchpavZqlJ6w=\");\n\n_c = TaskForm;\nexport default TaskForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"sources":["/home/allareddisekharreddy/Aritic/Expenses/src/Components/TaskForm.js"],"names":["useState","useReducer","Button","Container","Row","Col","TaskReducer","initialState","title","isTitleValid","description","isDescriptionValid","dueDate","isDueDateValid","type","isTypeValid","TaskForm","props","taskState","dispatchTaskData","ValidateInput","event","target","id","titleChangeHandler","descriptionChangeHandler","dueDateChangeHandler","taskTypeChangeHandler","addTaskHandler","preventDefault","onAddTask","setTitle","setDescription","setDueDate","setType","setIsTitleValid","setIsDescriptionValid","setIsDueDateValid","setIsTypeValid","paddingRight","paddingLeft","marginTop","float","marginBottom"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,GAA5B,EAAiCC,GAAjC,QAA4C,iBAA5C;AACA,OAAO,qBAAP;AACA,OAAOC,WAAP,MAAwB,yBAAxB;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,YAAY,EAAE,IAFK;AAGnBC,EAAAA,WAAW,EAAE,EAHM;AAInBC,EAAAA,kBAAkB,EAAE,IAJD;AAKnBC,EAAAA,OAAO,EAAE,EALU;AAMnBC,EAAAA,cAAc,EAAE,IANG;AAOnBC,EAAAA,IAAI,EAAE,EAPa;AAQnBC,EAAAA,WAAW,EAAE;AARM,CAArB;;AAWA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAM,CAACC,SAAD,EAAYC,gBAAZ,IAAgClB,UAAU,CAACK,WAAD,EAAcC,YAAd,CAAhD;;AAEA,QAAMa,aAAa,GAAIC,KAAD,IAAW;AAC/B,YAAQA,KAAK,CAACC,MAAN,CAAaC,EAArB;AACE,WAAK,YAAL;AACEJ,QAAAA,gBAAgB,CAAC;AAAEL,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAhB;AACA;;AACF,WAAK,kBAAL;AACEK,QAAAA,gBAAgB,CAAC;AAAEL,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAhB;AACA;;AACF,WAAK,eAAL;AACEK,QAAAA,gBAAgB,CAAC;AAAEL,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAhB;AACA;;AACF,WAAK,WAAL;AACEK,QAAAA,gBAAgB,CAAC;AAAEL,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAhB;AACA;;AACF;AACE;AAdJ;AAgBD,GAjBD;;AAkBA,QAAMU,kBAAkB,GAAIH,KAAD,IAAW;AACpCF,IAAAA,gBAAgB,CAAC;AAAEL,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAhB;AACAM,IAAAA,aAAa,CAACC,KAAD,CAAb;AACD,GAHD;;AAIA,QAAMI,wBAAwB,GAAIJ,KAAD,IAAW;AAC1CF,IAAAA,gBAAgB,CAAC;AAAEL,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAhB;AACAM,IAAAA,aAAa,CAACC,KAAD,CAAb;AACD,GAHD;;AAIA,QAAMK,oBAAoB,GAAIL,KAAD,IAAW;AACtCF,IAAAA,gBAAgB,CAAC;AAAEL,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAhB;AACAM,IAAAA,aAAa,CAACC,KAAD,CAAb;AACD,GAHD;;AAKA,QAAMM,qBAAqB,GAAIN,KAAD,IAAW;AACvCF,IAAAA,gBAAgB,CAAC;AAAEL,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAhB;AACAM,IAAAA,aAAa,CAACC,KAAD,CAAb;AACD,GAHD;;AAKA,QAAMO,cAAc,GAAIP,KAAD,IAAW;AAChCA,IAAAA,KAAK,CAACQ,cAAN;;AACA,QACEX,SAAS,CAACV,KAAV,IACAU,SAAS,CAACR,WADV,IAEAQ,SAAS,CAACN,OAFV,IAGAM,SAAS,CAACJ,IAJZ,EAKE;AACAG,MAAAA,KAAK,CAACa,SAAN,CAAgB;AACdtB,QAAAA,KAAK,EAAEU,SAAS,CAACV,KADH;AAEdE,QAAAA,WAAW,EAAEQ,SAAS,CAACR,WAFT;AAGdE,QAAAA,OAAO,EAAEM,SAAS,CAACN,OAHL;AAIdE,QAAAA,IAAI,EAAEI,SAAS,CAACJ;AAJF,OAAhB;AAMAiB,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAC,MAAAA,cAAc,CAAC,EAAD,CAAd;AACAC,MAAAA,UAAU,CAAC,EAAD,CAAV;AACAC,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD;;AACD,QAAI,CAAChB,SAAS,CAACV,KAAf,EAAsB;AACpB2B,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD;;AACD,QAAI,CAACjB,SAAS,CAACR,WAAf,EAA4B;AAC1B0B,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACD;;AACD,QAAI,CAAClB,SAAS,CAACN,OAAf,EAAwB;AACtByB,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD;;AACD,QAAI,CAACnB,SAAS,CAACJ,IAAf,EAAqB;AACnBwB,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD;AACF,GA/BD;;AAgCA,sBACE;AAAM,IAAA,QAAQ,EAAEV,cAAhB;AAAA,4BACE;AAAA,8BACE;AACE,QAAA,SAAS,EAAG,cAAa,CAACnB,YAAD,GAAgB,SAAhB,GAA4B,EAAG,EAD1D;AAEE,QAAA,OAAO,EAAC,YAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AACE,QAAA,EAAE,EAAC,YADL;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,SAAS,EAAG,gBAAe,CAACA,YAAD,GAAgB,SAAhB,GAA4B,EAAG,EAH5D;AAIE,QAAA,QAAQ,EAAEe,kBAJZ;AAKE,QAAA,KAAK,EAAEhB,KALT;AAME,QAAA,WAAW,EAAC;AANd;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAiBE;AAAA,8BACE;AACE,QAAA,SAAS,EAAG,cAAa,CAACG,kBAAD,GAAsB,SAAtB,GAAkC,EAAG,EADhE;AAEE,QAAA,OAAO,EAAC,kBAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AACE,QAAA,EAAE,EAAC,kBADL;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,SAAS,EAAG,gBAAe,CAACA,kBAAD,GAAsB,SAAtB,GAAkC,EAAG,EAHlE;AAIE,QAAA,QAAQ,EAAEc,wBAJZ;AAKE,QAAA,KAAK,EAAEf,WALT;AAME,QAAA,WAAW,EAAC;AANd;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF,eAiCE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAAE6B,QAAAA,YAAY,EAAE,KAAhB;AAAuBC,QAAAA,WAAW,EAAE;AAApC,OAAlB;AAAA,6BACE,QAAC,GAAD;AAAA,gCACE,QAAC,GAAD;AAAA,kCACE;AACE,YAAA,SAAS,EAAG,cAAa,CAAC3B,cAAD,GAAkB,SAAlB,GAA8B,EAAG,EAD5D;AAEE,YAAA,OAAO,EAAC,eAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE;AACE,YAAA,EAAE,EAAC,eADL;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,SAAS,EAAG,gBAAe,CAACA,cAAD,GAAkB,SAAlB,GAA8B,EAAG,EAH9D;AAIE,YAAA,QAAQ,EAAEa,oBAJZ;AAKE,YAAA,KAAK,EAAEd;AALT;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAgBE,QAAC,GAAD;AAAA,kCACE;AACE,YAAA,SAAS,EAAG,cAAa,CAACG,WAAD,GAAe,SAAf,GAA2B,EAAG,EADzD;AAEE,YAAA,OAAO,EAAC,WAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE;AACE,YAAA,SAAS,EAAG,gBAAe,CAACA,WAAD,GAAe,SAAf,GAA2B,EAAG,EAD3D;AAEE,YAAA,EAAE,EAAC,WAFL;AAGE,YAAA,QAAQ,EAAEY,qBAHZ;AAIE,YAAA,KAAK,EAAEb,IAJT;AAAA,oCAME;AAAQ,cAAA,KAAK,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,oBANF,eAOE;AAAQ,cAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,eAQE;AAAQ,cAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF,eASE;AAAQ,cAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAjCF,eAuEE;AAAK,MAAA,KAAK,EAAE;AAAE2B,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,OAAT;AAAkBC,UAAAA,YAAY,EAAE;AAAhC,SAAf;AAAwD,QAAA,IAAI,EAAC,QAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAvEF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+ED,CA9JD;;GAAM3B,Q;;KAAAA,Q;AAgKN,eAAeA,QAAf","sourcesContent":["import { useState, useReducer } from \"react\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\nimport \"../UI/overwrite.css\";\nimport TaskReducer from \"../Reducers/TaskReducer\";\n\nconst initialState = {\n  title: \"\",\n  isTitleValid: true,\n  description: \"\",\n  isDescriptionValid: true,\n  dueDate: \"\",\n  isDueDateValid: true,\n  type: \"\",\n  isTypeValid: true,\n};\n\nconst TaskForm = (props) => {\n  // const [title, setTitle] = useState(\"\");\n  // const [isTitleValid, setIsTitleValid] = useState(true);\n  // const [description, setDescription] = useState(\"\");\n  // const [isDescriptionValid, setIsDescriptionValid] = useState(true);\n  // const [dueDate, setDueDate] = useState(\"\");\n  // const [isDueDateValid, setIsDueDateValid] = useState(true);\n  // const [type, setType] = useState(\"\");\n  // const [isTypeValid, setIsTypeValid] = useState(true);\n  const [taskState, dispatchTaskData] = useReducer(TaskReducer, initialState);\n\n  const ValidateInput = (event) => {\n    switch (event.target.id) {\n      case \"task_title\":\n        dispatchTaskData({ type: \"validateTitle\" });\n        break;\n      case \"task_description\":\n        dispatchTaskData({ type: \"validateDescription\" });\n        break;\n      case \"task_due_date\":\n        dispatchTaskData({ type: \"validateDueDate\" });\n        break;\n      case \"task_type\":\n        dispatchTaskData({ type: \"validateType\" });\n        break;\n      default:\n        break;\n    }\n  };\n  const titleChangeHandler = (event) => {\n    dispatchTaskData({ type: \"titleInput\" });\n    ValidateInput(event);\n  };\n  const descriptionChangeHandler = (event) => {\n    dispatchTaskData({ type: \"description\" });\n    ValidateInput(event);\n  };\n  const dueDateChangeHandler = (event) => {\n    dispatchTaskData({ type: \"dueDateInput\" });\n    ValidateInput(event);\n  };\n\n  const taskTypeChangeHandler = (event) => {\n    dispatchTaskData({ type: \"typeInput\" });\n    ValidateInput(event);\n  };\n\n  const addTaskHandler = (event) => {\n    event.preventDefault();\n    if (\n      taskState.title &&\n      taskState.description &&\n      taskState.dueDate &&\n      taskState.type\n    ) {\n      props.onAddTask({\n        title: taskState.title,\n        description: taskState.description,\n        dueDate: taskState.dueDate,\n        type: taskState.type,\n      });\n      setTitle(\"\");\n      setDescription(\"\");\n      setDueDate(\"\");\n      setType(\"\");\n    }\n    if (!taskState.title) {\n      setIsTitleValid(false);\n    }\n    if (!taskState.description) {\n      setIsDescriptionValid(false);\n    }\n    if (!taskState.dueDate) {\n      setIsDueDateValid(false);\n    }\n    if (!taskState.type) {\n      setIsTypeValid(false);\n    }\n  };\n  return (\n    <form onSubmit={addTaskHandler}>\n      <div>\n        <label\n          className={`form-label ${!isTitleValid ? \"invalid\" : \"\"}`}\n          htmlFor=\"task_title\"\n        >\n          Title\n        </label>\n        <input\n          id=\"task_title\"\n          type=\"text\"\n          className={`form-control ${!isTitleValid ? \"invalid\" : \"\"}`}\n          onChange={titleChangeHandler}\n          value={title}\n          placeholder=\"This field is required...\"\n        />\n      </div>\n      <div>\n        <label\n          className={`form-label ${!isDescriptionValid ? \"invalid\" : \"\"}`}\n          htmlFor=\"task_description\"\n        >\n          Description\n        </label>\n        <input\n          id=\"task_description\"\n          type=\"textarea\"\n          className={`form-control ${!isDescriptionValid ? \"invalid\" : \"\"}`}\n          onChange={descriptionChangeHandler}\n          value={description}\n          placeholder=\"This field is required...\"\n        />\n      </div>\n      <Container style={{ paddingRight: \"0px\", paddingLeft: \"0px\" }}>\n        <Row>\n          <Col>\n            <label\n              className={`form-label ${!isDueDateValid ? \"invalid\" : \"\"}`}\n              htmlFor=\"task_due_date\"\n            >\n              Closure Date\n            </label>\n            <input\n              id=\"task_due_date\"\n              type=\"date\"\n              className={`form-control ${!isDueDateValid ? \"invalid\" : \"\"}`}\n              onChange={dueDateChangeHandler}\n              value={dueDate}\n            />\n          </Col>\n          <Col>\n            <label\n              className={`form-label ${!isTypeValid ? \"invalid\" : \"\"}`}\n              htmlFor=\"task_type\"\n            >\n              Type\n            </label>\n            <select\n              className={`form-control ${!isTypeValid ? \"invalid\" : \"\"}`}\n              id=\"task_type\"\n              onChange={taskTypeChangeHandler}\n              value={type}\n            >\n              <option value=\"\"></option>\n              <option value=\"Call\">Call</option>\n              <option value=\"Email\">Email</option>\n              <option value=\"Meeting\">Meeting</option>\n            </select>\n          </Col>\n        </Row>\n      </Container>\n      <div style={{ marginTop: \"10px\" }}>\n        <Button style={{ float: \"right\", marginBottom: \"8px\" }} type=\"submit\">\n          Add\n        </Button>\n      </div>\n    </form>\n  );\n};\n\nexport default TaskForm;\n"]},"metadata":{},"sourceType":"module"}