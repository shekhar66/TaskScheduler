{"ast":null,"code":"var _jsxFileName = \"/home/allareddisekharreddy/Aritic/TasksScheduler/src/Components/Content/Login/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = props => {\n  _s();\n\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\n  const [emailIsValid, setEmailIsValid] = useState(true);\n  const [passwordIsValid, setPasswordIsValid] = useState(true);\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n\n  const emailChangeHandler = event => {\n    console.log(event.target.value.includes(\"@\"));\n    setEnteredEmail(event.target.value);\n\n    if (!event.target.value) {\n      setEmailIsValid(false);\n      setEmailError(\"Email should not be empty\");\n    } else if (!event.target.value.includes(\"@\")) {\n      setEmailIsValid(false);\n      setEmailError(\"Invalid Email\");\n    } else {\n      setEmailIsValid(true);\n    }\n  };\n\n  const passwordChangeHandler = event => {\n    setEnteredPassword(event.target.value);\n\n    if (!event.target.value) {\n      setPasswordIsValid(false);\n      setPasswordError(\"Password should not be empty\");\n    } else if (event.target.value.length < 4) {\n      setPasswordIsValid(false);\n      setPasswordError(\"Password must be atleast 4 characters\");\n    } else {\n      setPasswordIsValid(true);\n    }\n  };\n\n  const loginHandler = event => {\n    event.preventDefault();\n\n    if (!enteredEmail) {\n      setEmailIsValid(true);\n    }\n\n    if (enteredEmail && enteredPassword && emailIsValid && passwordIsValid) {\n      console.log(\"Form valid...!!!!!\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: loginHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: `form-label`,\n        htmlFor: \"login_email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"login_email\",\n        type: \"email\",\n        className: `form-control`,\n        onChange: emailChangeHandler,\n        value: enteredEmail,\n        placeholder: \"This field is required...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), !emailIsValid && /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        children: emailError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"1%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: `form-label`,\n        htmlFor: \"login_password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"login_password\",\n        type: \"password\",\n        className: `form-control`,\n        onChange: passwordChangeHandler,\n        value: enteredPassword,\n        placeholder: \"This field is required...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), !passwordIsValid && /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        children: passwordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"10px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"form-control btn-primary\",\n          style: {\n            width: \"40%\",\n            position: \"relative\",\n            left: \"32%\",\n            marginBottom: \"8px\"\n          },\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginForm, \"qRFqFF08FdASCTZ3MmRYc7hH6cE=\");\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/home/allareddisekharreddy/Aritic/TasksScheduler/src/Components/Content/Login/LoginForm.js"],"names":["React","useState","LoginForm","props","enteredEmail","setEnteredEmail","enteredPassword","setEnteredPassword","emailIsValid","setEmailIsValid","passwordIsValid","setPasswordIsValid","emailError","setEmailError","passwordError","setPasswordError","emailChangeHandler","event","console","log","target","value","includes","passwordChangeHandler","length","loginHandler","preventDefault","color","marginTop","width","position","left","marginBottom"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\n\nconst LoginForm = (props) => {\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\n  const [emailIsValid, setEmailIsValid] = useState(true);\n  const [passwordIsValid, setPasswordIsValid] = useState(true);\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n\n  const emailChangeHandler = (event) => {\n    console.log(event.target.value.includes(\"@\"));\n    setEnteredEmail(event.target.value);\n    if (!event.target.value) {\n      setEmailIsValid(false);\n      setEmailError(\"Email should not be empty\");\n    } else if (!event.target.value.includes(\"@\")) {\n      setEmailIsValid(false);\n      setEmailError(\"Invalid Email\");\n    } else {\n      setEmailIsValid(true);\n    }\n  };\n  const passwordChangeHandler = (event) => {\n    setEnteredPassword(event.target.value);\n    if (!event.target.value) {\n      setPasswordIsValid(false);\n      setPasswordError(\"Password should not be empty\");\n    } else if (event.target.value.length < 4) {\n      setPasswordIsValid(false);\n      setPasswordError(\"Password must be atleast 4 characters\");\n    } else {\n      setPasswordIsValid(true);\n    }\n  };\n  const loginHandler = (event) => {\n    event.preventDefault();\n    if (!enteredEmail) {\n      setEmailIsValid(true);\n    }\n    if (enteredEmail && enteredPassword && emailIsValid && passwordIsValid) {\n      console.log(\"Form valid...!!!!!\");\n    }\n  };\n\n  return (\n    <form onSubmit={loginHandler}>\n      <div>\n        <label className={`form-label`} htmlFor=\"login_email\">\n          Email\n        </label>\n        <input\n          id=\"login_email\"\n          type=\"email\"\n          className={`form-control`}\n          onChange={emailChangeHandler}\n          value={enteredEmail}\n          placeholder=\"This field is required...\"\n        />\n        {!emailIsValid && <span style={{ color: \"red\" }}>{emailError}</span>}\n      </div>\n      <div style={{ marginTop: \"1%\" }}>\n        <label className={`form-label`} htmlFor=\"login_password\">\n          Password\n        </label>\n        <input\n          id=\"login_password\"\n          type=\"password\"\n          className={`form-control`}\n          onChange={passwordChangeHandler}\n          value={enteredPassword}\n          placeholder=\"This field is required...\"\n        />\n        {!passwordIsValid && (\n          <span style={{ color: \"red\" }}>{passwordError}</span>\n        )}\n        <div style={{ marginTop: \"10px\" }}>\n          <button\n            className=\"form-control btn-primary\"\n            style={{\n              width: \"40%\",\n              position: \"relative\",\n              left: \"32%\",\n              marginBottom: \"8px\",\n            }}\n            type=\"submit\"\n          >\n            Login\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}