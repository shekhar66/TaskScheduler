{"ast":null,"code":"var _jsxFileName = \"/home/allareddisekharreddy/Aritic/Expenses/src/Components/TotalTasks.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Header from \"./Header\";\nimport Tasks from \"./Tasks\";\nimport ReactDOM from \"react-dom\";\nimport { LoadingSpinner } from \"../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TotalTasks = props => {\n  _s();\n\n  const {\n    isLoading: isRunning,\n    sendRequest: fetchAllTasks,\n    error: isAllTasksError\n  } = useHttp();\n  useEffect(() => {\n    const allTaskHandler = data => {\n      console.log(data);\n      if (!data) setTasks([]);else {\n        const loadedTasks = [];\n\n        for (const taskKey in data) {\n          loadedTasks.push({\n            id: taskKey,\n            title: data[taskKey].title,\n            description: data[taskKey].description,\n            dueDate: data[taskKey].dueDate,\n            type: data[taskKey].type\n          });\n        }\n\n        setTasks(loadedTasks);\n      }\n    };\n\n    fetchAllTasks({\n      url: \"https://shekhar-test-dcbe5-default-rtdb.firebaseio.com/tasks.json\"\n    }, allTaskHandler);\n  }, [fetchAllTasks]);\n\n  const deleteTaskHandler = data => props.onTaskDelete(data);\n\n  const updateTaskHandler = updatedTask => {\n    props.onUpdateTask(updatedTask);\n  };\n\n  let content = /*#__PURE__*/_jsxDEV(Header, {\n    name: props.isLoading ? \"Loading....!!!!\" : \"No Tasks Found..!! Try by adding new..!!\",\n    style: {\n      color: \"darkslateblue\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n\n  if (props.tasks.length) {\n    content = /*#__PURE__*/_jsxDEV(Tasks, {\n      onUpdateTask: updateTaskHandler,\n      onDeleteTask: deleteTaskHandler,\n      tasks: props.tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [props.isLoading && /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }, this), document.getElementById(\"loading_spinner\")), props.isLoading && /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"backdrop-lay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }, this), document.getElementById(\"backdrop\")), content]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TotalTasks, \"JLnjRhGwYosz/7umRPvVkYYPWD4=\", true);\n\n_c = TotalTasks;\nexport default TotalTasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"TotalTasks\");","map":{"version":3,"sources":["/home/allareddisekharreddy/Aritic/Expenses/src/Components/TotalTasks.js"],"names":["React","Header","Tasks","ReactDOM","LoadingSpinner","TotalTasks","props","isLoading","isRunning","sendRequest","fetchAllTasks","error","isAllTasksError","useHttp","useEffect","allTaskHandler","data","console","log","setTasks","loadedTasks","taskKey","push","id","title","description","dueDate","type","url","deleteTaskHandler","onTaskDelete","updateTaskHandler","updatedTask","onUpdateTask","content","color","tasks","length","createPortal","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,cAAT,QAA+B,QAA/B;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM;AACJC,IAAAA,SAAS,EAAEC,SADP;AAEJC,IAAAA,WAAW,EAAEC,aAFT;AAGJC,IAAAA,KAAK,EAAEC;AAHH,MAIFC,OAAO,EAJX;AAMAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMC,cAAc,GAAIC,IAAD,IAAU;AAC/BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,UAAI,CAACA,IAAL,EAAWG,QAAQ,CAAC,EAAD,CAAR,CAAX,KACK;AACH,cAAMC,WAAW,GAAG,EAApB;;AACA,aAAK,MAAMC,OAAX,IAAsBL,IAAtB,EAA4B;AAC1BI,UAAAA,WAAW,CAACE,IAAZ,CAAiB;AACfC,YAAAA,EAAE,EAAEF,OADW;AAEfG,YAAAA,KAAK,EAAER,IAAI,CAACK,OAAD,CAAJ,CAAcG,KAFN;AAGfC,YAAAA,WAAW,EAAET,IAAI,CAACK,OAAD,CAAJ,CAAcI,WAHZ;AAIfC,YAAAA,OAAO,EAAEV,IAAI,CAACK,OAAD,CAAJ,CAAcK,OAJR;AAKfC,YAAAA,IAAI,EAAEX,IAAI,CAACK,OAAD,CAAJ,CAAcM;AALL,WAAjB;AAOD;;AACDR,QAAAA,QAAQ,CAACC,WAAD,CAAR;AACD;AACF,KAhBD;;AAiBAV,IAAAA,aAAa,CACX;AACEkB,MAAAA,GAAG,EAAE;AADP,KADW,EAIXb,cAJW,CAAb;AAMD,GAxBQ,EAwBN,CAACL,aAAD,CAxBM,CAAT;;AAyBA,QAAMmB,iBAAiB,GAAIb,IAAD,IAAUV,KAAK,CAACwB,YAAN,CAAmBd,IAAnB,CAApC;;AACA,QAAMe,iBAAiB,GAAIC,WAAD,IAAiB;AACzC1B,IAAAA,KAAK,CAAC2B,YAAN,CAAmBD,WAAnB;AACD,GAFD;;AAGA,MAAIE,OAAO,gBACT,QAAC,MAAD;AACE,IAAA,IAAI,EACF5B,KAAK,CAACC,SAAN,GACI,iBADJ,GAEI,0CAJR;AAME,IAAA,KAAK,EAAE;AAAE4B,MAAAA,KAAK,EAAE;AAAT;AANT;AAAA;AAAA;AAAA;AAAA,UADF;;AAUA,MAAI7B,KAAK,CAAC8B,KAAN,CAAYC,MAAhB,EAAwB;AACtBH,IAAAA,OAAO,gBACL,QAAC,KAAD;AACE,MAAA,YAAY,EAAEH,iBADhB;AAEE,MAAA,YAAY,EAAEF,iBAFhB;AAGE,MAAA,KAAK,EAAEvB,KAAK,CAAC8B;AAHf;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AACD,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,eACG9B,KAAK,CAACC,SAAN,iBACCJ,QAAQ,CAACmC,YAAT,eACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YADF,EAEEC,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,CAFF,CAFJ,EAMGlC,KAAK,CAACC,SAAN,iBACCJ,QAAQ,CAACmC,YAAT,eACE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADF,EAEEC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAFF,CAPJ,EAWGN,OAXH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAtED;;GAAM7B,U;;KAAAA,U;AAwEN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport Header from \"./Header\";\nimport Tasks from \"./Tasks\";\nimport ReactDOM from \"react-dom\";\nimport { LoadingSpinner } from \"../App\";\n\nconst TotalTasks = (props) => {\n  const {\n    isLoading: isRunning,\n    sendRequest: fetchAllTasks,\n    error: isAllTasksError,\n  } = useHttp();\n\n  useEffect(() => {\n    const allTaskHandler = (data) => {\n      console.log(data);\n      if (!data) setTasks([]);\n      else {\n        const loadedTasks = [];\n        for (const taskKey in data) {\n          loadedTasks.push({\n            id: taskKey,\n            title: data[taskKey].title,\n            description: data[taskKey].description,\n            dueDate: data[taskKey].dueDate,\n            type: data[taskKey].type,\n          });\n        }\n        setTasks(loadedTasks);\n      }\n    };\n    fetchAllTasks(\n      {\n        url: \"https://shekhar-test-dcbe5-default-rtdb.firebaseio.com/tasks.json\",\n      },\n      allTaskHandler\n    );\n  }, [fetchAllTasks]);\n  const deleteTaskHandler = (data) => props.onTaskDelete(data);\n  const updateTaskHandler = (updatedTask) => {\n    props.onUpdateTask(updatedTask);\n  };\n  let content = (\n    <Header\n      name={\n        props.isLoading\n          ? \"Loading....!!!!\"\n          : \"No Tasks Found..!! Try by adding new..!!\"\n      }\n      style={{ color: \"darkslateblue\" }}\n    />\n  );\n  if (props.tasks.length) {\n    content = (\n      <Tasks\n        onUpdateTask={updateTaskHandler}\n        onDeleteTask={deleteTaskHandler}\n        tasks={props.tasks}\n      />\n    );\n  }\n  return (\n    <React.Fragment>\n      {props.isLoading &&\n        ReactDOM.createPortal(\n          <LoadingSpinner />,\n          document.getElementById(\"loading_spinner\")\n        )}\n      {props.isLoading &&\n        ReactDOM.createPortal(\n          <div className=\"backdrop-lay\"></div>,\n          document.getElementById(\"backdrop\")\n        )}\n      {content}\n    </React.Fragment>\n  );\n};\n\nexport default TotalTasks;\n"]},"metadata":{},"sourceType":"module"}