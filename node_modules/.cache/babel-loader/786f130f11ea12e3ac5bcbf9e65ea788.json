{"ast":null,"code":"var _jsxFileName = \"/home/allareddisekharreddy/Aritic/TasksScheduler/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Main from \"./Components/Content/Task/Main\";\nimport NavBar from \"./Components/NavBar/NavBar\";\nimport { Route } from \"react-router\";\nimport LoginPage from \"./Components/Content/Login/LoginPage\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  let isLoggedIn = localStorage.getItem(\"loggedIn\");\n  useSelector(prevState => prevState.loggedIn);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/login\",\n      children: [isLoggedIn && /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(NavBar, {\n          header: \"Welcome to Task Scheduler..!!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/tasks\",\n      children: isLoggedIn && /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(NavBar, {\n          header: \"Task Scheduler\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-container\",\n          children: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      exact: true,\n      children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/allareddisekharreddy/Aritic/TasksScheduler/src/App.js"],"names":["React","Main","NavBar","Route","LoginPage","useSelector","Redirect","App","isLoggedIn","localStorage","getItem","prevState","loggedIn"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,gCAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,kBAAzB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,MAAIC,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAjB;AACAL,EAAAA,WAAW,CAAEM,SAAD,IAAeA,SAAS,CAACC,QAA1B,CAAX;AACA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAA,iBACGJ,UAAU,iBAAI,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADjB,eAEE,QAAC,KAAD,CAAO,QAAP;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,MAAM,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAA,gBACGA,UAAU,iBACT,QAAC,KAAD,CAAO,QAAP;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,MAAM,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA,iCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YARF,eAkBE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,KAAK,MAArB;AAAA,iBACG,CAACA,UAAD,iBAAe,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADlB,EAEGA,UAAU,iBAAI,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAFjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA5BD;;GAAMD,G;UAEJF,W;;;KAFIE,G;AA8BN,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport Main from \"./Components/Content/Task/Main\";\nimport NavBar from \"./Components/NavBar/NavBar\";\nimport { Route } from \"react-router\";\nimport LoginPage from \"./Components/Content/Login/LoginPage\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nconst App = () => {\n  let isLoggedIn = localStorage.getItem(\"loggedIn\");\n  useSelector((prevState) => prevState.loggedIn);\n  return (\n    <React.Fragment>\n      <Route path=\"/login\">\n        {isLoggedIn && <Redirect to=\"/tasks\" />}\n        <React.Fragment>\n          <NavBar header=\"Welcome to Task Scheduler..!!\" />\n          <LoginPage />\n        </React.Fragment>\n      </Route>\n      <Route path=\"/tasks\">\n        {isLoggedIn && (\n          <React.Fragment>\n            <NavBar header=\"Task Scheduler\" />\n            <div className=\"content-container\">\n              <Main />\n            </div>\n          </React.Fragment>\n        )}\n      </Route>\n      <Route path=\"/\" exact>\n        {!isLoggedIn && <Redirect to=\"/login\" />}\n        {isLoggedIn && <Redirect to=\"/tasks\" />}\n      </Route>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}