{"ast":null,"code":"var _jsxFileName = \"/home/allareddisekharreddy/Aritic/TasksScheduler/src/Components/Notification.js\",\n    _s = $RefreshSig$();\n\nimport ReactDOM from \"react-dom\";\nimport { Card, CloseButton } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Notification = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const notification = useSelector(prevState => {\n    return prevState.notification;\n  });\n\n  const closeNotification = () => {\n    dispatch({\n      type: \"notification\",\n      message: \"\",\n      color: \"\"\n    });\n  };\n\n  const NotificationContent = /*#__PURE__*/_jsxDEV(Card, {\n    className: \"notification-card\",\n    style: {\n      display: notification.message ? \"block\" : \"none\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      className: \"notification-body\",\n      style: {\n        background: props.color ? props.color : \"#3ac13a\"\n      },\n      children: [props.message, /*#__PURE__*/_jsxDEV(CloseButton, {\n        onClick: closeNotification,\n        style: {\n          float: \"right\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/ReactDOM.createPortal(NotificationContent, document.getElementById(\"flashes\"));\n};\n\n_s(Notification, \"kh6PDF3Fe/dJNqm0MBoqSrDV1MU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Notification;\nexport default Notification;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notification\");","map":{"version":3,"sources":["/home/allareddisekharreddy/Aritic/TasksScheduler/src/Components/Notification.js"],"names":["ReactDOM","Card","CloseButton","useSelector","useDispatch","Notification","props","dispatch","notification","prevState","closeNotification","type","message","color","NotificationContent","display","background","float","createPortal","document","getElementById"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,WAArB;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,iBAAlC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAMI,YAAY,GAAGL,WAAW,CAAEM,SAAD,IAAe;AAC9C,WAAOA,SAAS,CAACD,YAAjB;AACD,GAF+B,CAAhC;;AAIA,QAAME,iBAAiB,GAAG,MAAM;AAC9BH,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE,cAAR;AAAwBC,MAAAA,OAAO,EAAE,EAAjC;AAAqCC,MAAAA,KAAK,EAAE;AAA5C,KAAD,CAAR;AACD,GAFD;;AAGA,QAAMC,mBAAmB,gBACvB,QAAC,IAAD;AACE,IAAA,SAAS,EAAC,mBADZ;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAEP,YAAY,CAACI,OAAb,GAAuB,OAAvB,GAAiC;AAA5C,KAFT;AAAA,2BAIE,QAAC,IAAD,CAAM,IAAN;AACE,MAAA,SAAS,EAAC,mBADZ;AAEE,MAAA,KAAK,EAAE;AACLI,QAAAA,UAAU,EAAEV,KAAK,CAACO,KAAN,GAAcP,KAAK,CAACO,KAApB,GAA4B;AADnC,OAFT;AAAA,iBAMGP,KAAK,CAACM,OANT,eAOE,QAAC,WAAD;AAAa,QAAA,OAAO,EAAEF,iBAAtB;AAAyC,QAAA,KAAK,EAAE;AAAEO,UAAAA,KAAK,EAAE;AAAT;AAAhD;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,UADF;;AAiBA,sBAAOjB,QAAQ,CAACkB,YAAT,CACLJ,mBADK,EAELK,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAFK,CAAP;AAID,CA9BD;;GAAMf,Y;UACaD,W,EACID,W;;;KAFjBE,Y;AAgCN,eAAeA,YAAf","sourcesContent":["import ReactDOM from \"react-dom\";\nimport { Card, CloseButton } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst Notification = (props) => {\n  const dispatch = useDispatch();\n  const notification = useSelector((prevState) => {\n    return prevState.notification;\n  });\n\n  const closeNotification = () => {\n    dispatch({ type: \"notification\", message: \"\", color: \"\" });\n  };\n  const NotificationContent = (\n    <Card\n      className=\"notification-card\"\n      style={{ display: notification.message ? \"block\" : \"none\" }}\n    >\n      <Card.Body\n        className=\"notification-body\"\n        style={{\n          background: props.color ? props.color : \"#3ac13a\",\n        }}\n      >\n        {props.message}\n        <CloseButton onClick={closeNotification} style={{ float: \"right\" }} />\n      </Card.Body>\n    </Card>\n  );\n\n  return ReactDOM.createPortal(\n    NotificationContent,\n    document.getElementById(\"flashes\")\n  );\n};\n\nexport default Notification;\n"]},"metadata":{},"sourceType":"module"}