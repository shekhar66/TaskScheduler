{"ast":null,"code":"var _jsxFileName = \"/home/allareddisekharreddy/Aritic/Expenses/src/Context/task-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskContext = /*#__PURE__*/React.createContext({\n  tasks: []\n});\nexport const TaskContextProvider = props => {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n\n  const updateTaskHandler = () => {\n    setTasks(tasks);\n  };\n\n  /*#__PURE__*/\n  _jsxDEV(TaskContext.Provider, {\n    value: {\n      tasks: tasks,\n      updateTasks: {\n        updateTaskHandler\n      }\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }, this);\n};\n\n_s(TaskContextProvider, \"+34uIVDBalDkucWnJ7Aj1Xxb0MA=\");\n\n_c = TaskContextProvider;\nexport default TaskContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskContextProvider\");","map":{"version":3,"sources":["/home/allareddisekharreddy/Aritic/Expenses/src/Context/task-context.js"],"names":["React","useState","TaskContext","createContext","tasks","TaskContextProvider","props","setTasks","updateTaskHandler","updateTasks","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AACtCC,EAAAA,KAAK,EAAE;AAD+B,CAApB,CAApB;AAIA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC5C,QAAM,CAACF,KAAD,EAAQG,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;;AACA,QAAMO,iBAAiB,GAAG,MAAM;AAC9BD,IAAAA,QAAQ,CAACH,KAAD,CAAR;AACD,GAFD;;AAGA;AAAA,UAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLA,MAAAA,KAAK,EAAEA,KADF;AAELK,MAAAA,WAAW,EAAE;AAAED,QAAAA;AAAF;AAFR,KADT;AAAA,cAMGF,KAAK,CAACI;AANT;AAAA;AAAA;AAAA;AAAA;AAQD,CAbM;;GAAML,mB;;KAAAA,mB;AAeb,eAAeH,WAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst TaskContext = React.createContext({\n  tasks: [],\n});\n\nexport const TaskContextProvider = (props) => {\n  const [tasks, setTasks] = useState([]);\n  const updateTaskHandler = () => {\n    setTasks(tasks);\n  };\n  <TaskContext.Provider\n    value={{\n      tasks: tasks,\n      updateTasks: { updateTaskHandler },\n    }}\n  >\n    {props.children}\n  </TaskContext.Provider>;\n};\n\nexport default TaskContext;\n"]},"metadata":{},"sourceType":"module"}