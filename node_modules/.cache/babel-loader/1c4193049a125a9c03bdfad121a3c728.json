{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst useHttp = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendRequest = async (request, applyData) => {\n    setIsLoading(true);\n\n    try {\n      const response = await fetch(request.url, requestBody);\n      const data = await response.json();\n      applyData(data);\n    } catch (err) {\n      setError(\"Failed to send the request..!!!\");\n    }\n\n    setIsLoading(false);\n  };\n\n  return {\n    isLoading,\n    sendRequest,\n    error\n  };\n};\n\n_s(useHttp, \"vj++RuHna9NxFPGCY0p/mi1GZNM=\");\n\nexport default useHttp;\n/* const data = await response.json();\n      const loadedTasks = [];\n      for (const taskKey in data) {\n        loadedTasks.push({\n          id: taskKey,\n          title: data[taskKey].title,\n          description: data[taskKey].description,\n          dueDate: data[taskKey].dueDate,\n          type: data[taskKey].type,\n        });\n      } */","map":{"version":3,"sources":["/home/allareddisekharreddy/Aritic/Expenses/src/CustomHooks/useHttp.js"],"names":["useState","useHttp","isLoading","setIsLoading","error","setError","sendRequest","request","applyData","response","fetch","url","requestBody","data","json","err"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMM,WAAW,GAAG,OAAOC,OAAP,EAAgBC,SAAhB,KAA8B;AAChDL,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,QAAI;AACF,YAAMM,QAAQ,GAAG,MAAMC,KAAK,CAACH,OAAO,CAACI,GAAT,EAAcC,WAAd,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACAN,MAAAA,SAAS,CAACK,IAAD,CAAT;AACD,KAJD,CAIE,OAAOE,GAAP,EAAY;AACZV,MAAAA,QAAQ,CAAC,iCAAD,CAAR;AACD;;AACDF,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAVD;;AAWA,SAAO;AACLD,IAAAA,SADK;AAELI,IAAAA,WAFK;AAGLF,IAAAA;AAHK,GAAP;AAKD,CApBD;;GAAMH,O;;AAqBN,eAAeA,OAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { useState } from \"react\";\n\nconst useHttp = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendRequest = async (request, applyData) => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(request.url, requestBody);\n      const data = await response.json();\n      applyData(data);\n    } catch (err) {\n      setError(\"Failed to send the request..!!!\");\n    }\n    setIsLoading(false);\n  };\n  return {\n    isLoading,\n    sendRequest,\n    error,\n  };\n};\nexport default useHttp;\n\n/* const data = await response.json();\n      const loadedTasks = [];\n      for (const taskKey in data) {\n        loadedTasks.push({\n          id: taskKey,\n          title: data[taskKey].title,\n          description: data[taskKey].description,\n          dueDate: data[taskKey].dueDate,\n          type: data[taskKey].type,\n        });\n      } */\n"]},"metadata":{},"sourceType":"module"}