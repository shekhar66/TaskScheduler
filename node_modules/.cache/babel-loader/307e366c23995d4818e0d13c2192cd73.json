{"ast":null,"code":"var _jsxFileName = \"/home/allareddisekharreddy/Aritic/TasksScheduler/src/Components/Content/Task/NewTask.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\nimport \"../Assets/overwrite.css\";\nimport TaskReducer from \"../../../Reducer/TaskReducer\";\nimport \"../Assets/TaskForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTask = props => {\n  _s();\n\n  const initialState = {\n    title: props.taskDetails ? props.taskDetails.title : \"\",\n    isTitleValid: true,\n    description: props.taskDetails ? props.taskDetails.description : \"\",\n    isDescriptionValid: true,\n    dueDate: props.taskDetails ? props.taskDetails.dueDate : \"\",\n    isDueDateValid: true,\n    taskType: props.taskDetails ? props.taskDetails.type : \"\",\n    isTypeValid: true\n  };\n  const [taskState, dispatchTaskData] = useReducer(TaskReducer, initialState);\n\n  const ValidateInput = event => {\n    switch (event.target.id) {\n      case \"task_title\":\n        dispatchTaskData({\n          type: \"validateTitle\",\n          isTitleValid: event.target.value\n        });\n        break;\n\n      case \"task_description\":\n        dispatchTaskData({\n          type: \"validateDescription\",\n          isDescriptionValid: event.target.value\n        });\n        break;\n\n      case \"task_due_date\":\n        dispatchTaskData({\n          type: \"validateDueDate\",\n          isDueDateValid: event.target.value\n        });\n        break;\n\n      case \"task_type\":\n        dispatchTaskData({\n          type: \"validateType\",\n          isTypeValid: event.target.value ? true : false\n        });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const titleChangeHandler = event => {\n    dispatchTaskData({\n      type: \"titleInput\",\n      title: event.target.value\n    });\n    ValidateInput(event);\n  };\n\n  const descriptionChangeHandler = event => {\n    dispatchTaskData({\n      type: \"description\",\n      description: event.target.value\n    });\n    ValidateInput(event);\n  };\n\n  const dueDateChangeHandler = event => {\n    dispatchTaskData({\n      type: \"dueDateInput\",\n      dueDate: event.target.value\n    });\n    ValidateInput(event);\n  };\n\n  const taskTypeChangeHandler = event => {\n    dispatchTaskData({\n      type: \"typeInput\",\n      taskType: event.target.value\n    });\n    ValidateInput(event);\n  };\n\n  const addTaskHandler = event => {\n    event.preventDefault();\n\n    if (taskState.title && taskState.description && taskState.dueDate && taskState.taskType) {\n      const task = {\n        title: taskState.title,\n        description: taskState.description,\n        dueDate: taskState.dueDate,\n        type: taskState.taskType\n      };\n      props.addTask(task);\n      dispatchTaskData({\n        type: \"titleInput\",\n        title: \"\"\n      });\n      dispatchTaskData({\n        type: \"description\",\n        description: \"\"\n      });\n      dispatchTaskData({\n        type: \"dueDateInput\",\n        dueDate: \"\"\n      });\n      dispatchTaskData({\n        type: \"typeInput\",\n        taskType: \"\"\n      });\n    }\n\n    if (!taskState.title) {\n      dispatchTaskData({\n        type: \"validateTitle\",\n        isTitleValid: false\n      });\n    }\n\n    if (!taskState.description) {\n      dispatchTaskData({\n        type: \"validateDescription\",\n        isDescriptionValid: false\n      });\n    }\n\n    if (!taskState.dueDate) {\n      dispatchTaskData({\n        type: \"validateDueDate\",\n        isDuDateValid: false\n      });\n    }\n\n    if (!taskState.taskType) {\n      dispatchTaskData({\n        type: \"validateType\",\n        isTypeValid: false\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: addTaskHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: `form-label ${!taskState.isTitleValid ? \"invalid\" : \"\"}`,\n        htmlFor: \"task_title\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"task_title\",\n        type: \"text\",\n        className: `form-control ${!taskState.isTitleValid ? \"invalid\" : \"\"}`,\n        onChange: titleChangeHandler,\n        value: taskState.title,\n        placeholder: \"This field is required...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: `form-label ${!taskState.isDescriptionValid ? \"invalid\" : \"\"}`,\n        htmlFor: \"task_description\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"task_description\",\n        type: \"textarea\",\n        className: `form-control ${!taskState.isDescriptionValid ? \"invalid\" : \"\"}`,\n        onChange: descriptionChangeHandler,\n        value: taskState.description,\n        placeholder: \"This field is required...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        paddingRight: \"0px\",\n        paddingLeft: \"0px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: `form-label ${!taskState.isDueDateValid ? \"invalid\" : \"\"}`,\n            htmlFor: \"task_due_date\",\n            children: \"Closure Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"task_due_date\",\n            type: \"date\",\n            className: `form-control ${!taskState.isDueDateValid ? \"invalid\" : \"\"}`,\n            onChange: dueDateChangeHandler,\n            value: taskState.dueDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: `form-label ${!taskState.isTypeValid ? \"invalid\" : \"\"}`,\n            htmlFor: \"task_type\",\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: `form-control ${!taskState.isTypeValid ? \"invalid\" : \"\"}`,\n            id: \"task_type\",\n            onChange: taskTypeChangeHandler,\n            value: taskState.taskType,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Call\",\n              children: \"Call\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Meeting\",\n              children: \"Meeting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"10px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          float: \"right\",\n          marginBottom: \"8px\"\n        },\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTask, \"SEfMp92jRV3u734xchpavZqlJ6w=\");\n\n_c = NewTask;\nexport default NewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"sources":["/home/allareddisekharreddy/Aritic/TasksScheduler/src/Components/Content/Task/NewTask.js"],"names":["useReducer","Button","Container","Row","Col","TaskReducer","NewTask","props","initialState","title","taskDetails","isTitleValid","description","isDescriptionValid","dueDate","isDueDateValid","taskType","type","isTypeValid","taskState","dispatchTaskData","ValidateInput","event","target","id","value","titleChangeHandler","descriptionChangeHandler","dueDateChangeHandler","taskTypeChangeHandler","addTaskHandler","preventDefault","task","addTask","isDuDateValid","paddingRight","paddingLeft","marginTop","float","marginBottom"],"mappings":"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","sourcesContent":["import { useReducer } from \"react\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\nimport \"../Assets/overwrite.css\";\nimport TaskReducer from \"../../../Reducer/TaskReducer\";\nimport \"../Assets/TaskForm.css\";\n\nconst NewTask = (props) => {\n  const initialState = {\n    title: props.taskDetails ? props.taskDetails.title : \"\",\n    isTitleValid: true,\n    description: props.taskDetails ? props.taskDetails.description : \"\",\n    isDescriptionValid: true,\n    dueDate: props.taskDetails ? props.taskDetails.dueDate : \"\",\n    isDueDateValid: true,\n    taskType: props.taskDetails ? props.taskDetails.type : \"\",\n    isTypeValid: true,\n  };\n\n  const [taskState, dispatchTaskData] = useReducer(TaskReducer, initialState);\n\n  const ValidateInput = (event) => {\n    switch (event.target.id) {\n      case \"task_title\":\n        dispatchTaskData({\n          type: \"validateTitle\",\n          isTitleValid: event.target.value,\n        });\n        break;\n      case \"task_description\":\n        dispatchTaskData({\n          type: \"validateDescription\",\n          isDescriptionValid: event.target.value,\n        });\n        break;\n      case \"task_due_date\":\n        dispatchTaskData({\n          type: \"validateDueDate\",\n          isDueDateValid: event.target.value,\n        });\n        break;\n      case \"task_type\":\n        dispatchTaskData({\n          type: \"validateType\",\n          isTypeValid: event.target.value ? true : false,\n        });\n        break;\n      default:\n        break;\n    }\n  };\n  const titleChangeHandler = (event) => {\n    dispatchTaskData({ type: \"titleInput\", title: event.target.value });\n    ValidateInput(event);\n  };\n  const descriptionChangeHandler = (event) => {\n    dispatchTaskData({ type: \"description\", description: event.target.value });\n    ValidateInput(event);\n  };\n  const dueDateChangeHandler = (event) => {\n    dispatchTaskData({ type: \"dueDateInput\", dueDate: event.target.value });\n    ValidateInput(event);\n  };\n\n  const taskTypeChangeHandler = (event) => {\n    dispatchTaskData({ type: \"typeInput\", taskType: event.target.value });\n    ValidateInput(event);\n  };\n\n  const addTaskHandler = (event) => {\n    event.preventDefault();\n    if (\n      taskState.title &&\n      taskState.description &&\n      taskState.dueDate &&\n      taskState.taskType\n    ) {\n      const task = {\n        title: taskState.title,\n        description: taskState.description,\n        dueDate: taskState.dueDate,\n        type: taskState.taskType,\n      };\n      props.addTask(task);\n      dispatchTaskData({ type: \"titleInput\", title: \"\" });\n      dispatchTaskData({\n        type: \"description\",\n        description: \"\",\n      });\n      dispatchTaskData({ type: \"dueDateInput\", dueDate: \"\" });\n      dispatchTaskData({ type: \"typeInput\", taskType: \"\" });\n    }\n    if (!taskState.title) {\n      dispatchTaskData({ type: \"validateTitle\", isTitleValid: false });\n    }\n    if (!taskState.description) {\n      dispatchTaskData({\n        type: \"validateDescription\",\n        isDescriptionValid: false,\n      });\n    }\n    if (!taskState.dueDate) {\n      dispatchTaskData({ type: \"validateDueDate\", isDuDateValid: false });\n    }\n    if (!taskState.taskType) {\n      dispatchTaskData({ type: \"validateType\", isTypeValid: false });\n    }\n  };\n  return (\n    <form onSubmit={addTaskHandler}>\n      <div>\n        <label\n          className={`form-label ${!taskState.isTitleValid ? \"invalid\" : \"\"}`}\n          htmlFor=\"task_title\"\n        >\n          Title\n        </label>\n        <input\n          id=\"task_title\"\n          type=\"text\"\n          className={`form-control ${!taskState.isTitleValid ? \"invalid\" : \"\"}`}\n          onChange={titleChangeHandler}\n          value={taskState.title}\n          placeholder=\"This field is required...\"\n        />\n      </div>\n      <div>\n        <label\n          className={`form-label ${\n            !taskState.isDescriptionValid ? \"invalid\" : \"\"\n          }`}\n          htmlFor=\"task_description\"\n        >\n          Description\n        </label>\n        <input\n          id=\"task_description\"\n          type=\"textarea\"\n          className={`form-control ${\n            !taskState.isDescriptionValid ? \"invalid\" : \"\"\n          }`}\n          onChange={descriptionChangeHandler}\n          value={taskState.description}\n          placeholder=\"This field is required...\"\n        />\n      </div>\n      <Container style={{ paddingRight: \"0px\", paddingLeft: \"0px\" }}>\n        <Row>\n          <Col>\n            <label\n              className={`form-label ${\n                !taskState.isDueDateValid ? \"invalid\" : \"\"\n              }`}\n              htmlFor=\"task_due_date\"\n            >\n              Closure Date\n            </label>\n            <input\n              id=\"task_due_date\"\n              type=\"date\"\n              className={`form-control ${\n                !taskState.isDueDateValid ? \"invalid\" : \"\"\n              }`}\n              onChange={dueDateChangeHandler}\n              value={taskState.dueDate}\n            />\n          </Col>\n          <Col>\n            <label\n              className={`form-label ${\n                !taskState.isTypeValid ? \"invalid\" : \"\"\n              }`}\n              htmlFor=\"task_type\"\n            >\n              Type\n            </label>\n            <select\n              className={`form-control ${\n                !taskState.isTypeValid ? \"invalid\" : \"\"\n              }`}\n              id=\"task_type\"\n              onChange={taskTypeChangeHandler}\n              value={taskState.taskType}\n            >\n              <option value=\"\"></option>\n              <option value=\"Call\">Call</option>\n              <option value=\"Email\">Email</option>\n              <option value=\"Meeting\">Meeting</option>\n            </select>\n          </Col>\n        </Row>\n      </Container>\n      <div style={{ marginTop: \"10px\" }}>\n        <Button style={{ float: \"right\", marginBottom: \"8px\" }} type=\"submit\">\n          Add\n        </Button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewTask;\n"]},"metadata":{},"sourceType":"module"}