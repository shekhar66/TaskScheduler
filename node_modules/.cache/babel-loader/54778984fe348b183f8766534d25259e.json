{"ast":null,"code":"var _jsxFileName = \"/home/allareddisekharreddy/Aritic/TasksScheduler/src/Components/TaskFilter.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskFilter = props => {\n  _s();\n\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const tasks = useSelector(prevTasks => {\n    return prevTasks.tasks;\n  });\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const filterTimeout = setTimeout(() => {\n      console.log(\"Inside settimeout--\");\n      dispatch({\n        type: \"filter\",\n        filterpayload: {\n          filtervalue: enteredValue\n        }\n      });\n    }, 2000);\n    return () => {\n      clearTimeout(filterTimeout);\n    };\n  }, [enteredValue, dispatch]);\n\n  const filterTasksHandler = event => {\n    setEnteredValue(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: tasks && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-filter\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"task_filter\",\n        type: \"text\",\n        value: enteredValue,\n        className: `form-control`,\n        onChange: filterTasksHandler,\n        placeholder: \"Filter by title..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TaskFilter, \"PZyCJ9ILDZ51a805HEBb5KmDvEU=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = TaskFilter;\nexport default TaskFilter;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskFilter\");","map":{"version":3,"sources":["/home/allareddisekharreddy/Aritic/TasksScheduler/src/Components/TaskFilter.js"],"names":["useSelector","useDispatch","React","useEffect","useState","TaskFilter","props","enteredValue","setEnteredValue","tasks","prevTasks","dispatch","filterTimeout","setTimeout","console","log","type","filterpayload","filtervalue","clearTimeout","filterTasksHandler","event","target","value"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAMK,KAAK,GAAGT,WAAW,CAAEU,SAAD,IAAe;AACvC,WAAOA,SAAS,CAACD,KAAjB;AACD,GAFwB,CAAzB;AAGA,QAAME,QAAQ,GAAGV,WAAW,EAA5B;AACAE,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,aAAa,GAAGC,UAAU,CAAC,MAAM;AACrCC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAJ,MAAAA,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAE,QADC;AAEPC,QAAAA,aAAa,EAAE;AAAEC,UAAAA,WAAW,EAAEX;AAAf;AAFR,OAAD,CAAR;AAID,KAN+B,EAM7B,IAN6B,CAAhC;AAOA,WAAO,MAAM;AACXY,MAAAA,YAAY,CAACP,aAAD,CAAZ;AACD,KAFD;AAGD,GAXQ,EAWN,CAACL,YAAD,EAAeI,QAAf,CAXM,CAAT;;AAaA,QAAMS,kBAAkB,GAAIC,KAAD,IAAW;AACpCb,IAAAA,eAAe,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACD,GAFD;;AAGA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,cACGd,KAAK,iBACJ;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACE;AACE,QAAA,EAAE,EAAC,aADL;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,KAAK,EAAEF,YAHT;AAIE,QAAA,SAAS,EAAG,cAJd;AAKE,QAAA,QAAQ,EAAEa,kBALZ;AAME,QAAA,WAAW,EAAC;AANd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAtCD;;GAAMf,U;UAEUL,W,EAGGC,W;;;KALbI,U;AAwCN,eAAeA,UAAf","sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\nimport React, { useEffect, useState } from \"react\";\n\nconst TaskFilter = (props) => {\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const tasks = useSelector((prevTasks) => {\n    return prevTasks.tasks;\n  });\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const filterTimeout = setTimeout(() => {\n      console.log(\"Inside settimeout--\");\n      dispatch({\n        type: \"filter\",\n        filterpayload: { filtervalue: enteredValue },\n      });\n    }, 2000);\n    return () => {\n      clearTimeout(filterTimeout);\n    };\n  }, [enteredValue, dispatch]);\n\n  const filterTasksHandler = (event) => {\n    setEnteredValue(event.target.value);\n  };\n  return (\n    <React.Fragment>\n      {tasks && (\n        <div className=\"task-filter\">\n          <input\n            id=\"task_filter\"\n            type=\"text\"\n            value={enteredValue}\n            className={`form-control`}\n            onChange={filterTasksHandler}\n            placeholder=\"Filter by title..\"\n          />\n        </div>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default TaskFilter;\n"]},"metadata":{},"sourceType":"module"}