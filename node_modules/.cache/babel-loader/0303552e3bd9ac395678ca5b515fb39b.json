{"ast":null,"code":"var _jsxFileName = \"/home/allareddisekharreddy/Aritic/Expenses/src/App.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Card, Spinner, Accordion } from \"react-bootstrap\";\nimport TaskForm from \"./Components/TaskForm\";\nimport Header from \"./Components/Header\";\nimport TotalTasks from \"./Components/TotalTasks\";\nimport useHttp from \"./CustomHooks/useHttp\"; // import { TaskContextProvider } from \"./Context/task-context\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LoadingSpinner = () => {\n  return /*#__PURE__*/_jsxDEV(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"visually-hidden\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = LoadingSpinner;\n\nconst App = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [tasks, setTasks] = useState([]);\n  const {\n    isLoading,\n    sendRequest: fetchAllTasks,\n    error: isAllTasksError\n  } = useHttp();\n  useEffect(() => {\n    const allTaskHandler = data => {\n      if (!isAllTasksError) {\n        setTasks(data);\n      }\n    };\n\n    fetchAllTasks({\n      url: \"https://shekhar-test-dcbe5-default-rtdb.firebaseio.com/tasks.json\"\n    }, allTaskHandler);\n  }, [isAllTasksError]);\n\n  const TaskDeleteHandler = id => {\n    _s();\n\n    // setIsLoading(true);\n    // await fetch(\n    //   \"https://shekhar-test-dcbe5-default-rtdb.firebaseio.com/tasks/\" +\n    //     id +\n    //     \".json\",\n    //   {\n    //     method: \"DELETE\",\n    //     headers: { \"Content-Type\": \"application/json\" },\n    //   }\n    // );\n    // setIsLoading(false);\n    // const allTasks = tasks.filter((task) => id !== task.id);\n    // setTasks(allTasks);\n    const {\n      isLoading: isRunning,\n      sendRequest: deleteTask,\n      error: isDeleteError\n    } = useHttp();\n    setIsLoading(isRunning);\n    useEffect(() => {\n      const deleteTaskHandler = data => {\n        if (!isDeleteError) {\n          console.log(data);\n        }\n      };\n\n      deleteTask({\n        url: \"https://shekhar-test-dcbe5-default-rtdb.firebaseio.com/tasks/\" + id + \".json\",\n        method: \"DELETE\"\n      }, deleteTaskHandler);\n    }, [isDeleteError]);\n  };\n\n  _s(TaskDeleteHandler, \"kHOAga4wbTo6v1ilofgErYUVwWE=\", false, function () {\n    return [useHttp];\n  });\n\n  const addTaskHandler = async data => {\n    setIsLoading(true);\n\n    try {\n      const response = await fetch(\"https://shekhar-test-dcbe5-default-rtdb.firebaseio.com/tasks.json\", {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const resp = await response.json();\n      data = { ...data,\n        id: resp.name\n      };\n      setTasks(prevTasks => {\n        return [...prevTasks, data];\n      });\n    } catch (err) {\n      alert(\"Failed\");\n    }\n\n    setIsLoading(false);\n  };\n\n  const updateTaskHandler = async updatedTask => {\n    setIsLoading(true);\n    const id = updatedTask.id;\n    delete updatedTask.id;\n    await fetch(`https://shekhar-test-dcbe5-default-rtdb.firebaseio.com/tasks/${id}.json`, {\n      method: \"PATCH\",\n      body: JSON.stringify(updatedTask),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const latestTask = { ...updatedTask,\n      id\n    };\n    const allTasks = [];\n\n    for (const key in tasks) {\n      if (tasks[key].id === id) {\n        allTasks.push(latestTask);\n      } else {\n        allTasks.push(tasks[key]);\n      }\n    }\n\n    setTasks(allTasks);\n    setIsLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"50%\",\n      left: \"25%\",\n      marginLeft: \"25%\"\n    },\n    children: [isLoading && /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }, this), document.getElementById(\"loading_spinner\")), isLoading && /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"backdrop-lay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }, this), document.getElementById(\"backdrop\")), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        className: \"add-task-card\",\n        children: /*#__PURE__*/_jsxDEV(Accordion, {\n          children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n            className: \"add-task-header\",\n            children: /*#__PURE__*/_jsxDEV(Header, {\n              name: \"Add Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n            children: /*#__PURE__*/_jsxDEV(TaskForm, {\n              onAddTask: addTaskHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        marginTop: \"2%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          name: \"Total Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TotalTasks, {\n          onUpdateTask: updateTaskHandler,\n          onTaskDelete: TaskDeleteHandler,\n          tasks: tasks,\n          isLoading: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(App, \"O3uNnJaqmkE+VHMLjQtUPfSZoO4=\", false, function () {\n  return [useHttp];\n});\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoadingSpinner\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/home/allareddisekharreddy/Aritic/Expenses/src/App.js"],"names":["React","useState","useEffect","ReactDOM","Card","Spinner","Accordion","TaskForm","Header","TotalTasks","useHttp","LoadingSpinner","App","tasks","setTasks","isLoading","sendRequest","fetchAllTasks","error","isAllTasksError","allTaskHandler","data","url","TaskDeleteHandler","id","isRunning","deleteTask","isDeleteError","setIsLoading","deleteTaskHandler","console","log","method","addTaskHandler","response","fetch","body","JSON","stringify","headers","resp","json","name","prevTasks","err","alert","updateTaskHandler","updatedTask","latestTask","allTasks","key","push","width","left","marginLeft","createPortal","document","getElementById","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Card, Spinner, Accordion } from \"react-bootstrap\";\nimport TaskForm from \"./Components/TaskForm\";\nimport Header from \"./Components/Header\";\nimport TotalTasks from \"./Components/TotalTasks\";\nimport useHttp from \"./CustomHooks/useHttp\";\n// import { TaskContextProvider } from \"./Context/task-context\";\n\nexport const LoadingSpinner = () => {\n  return (\n    <Spinner animation=\"border\" role=\"status\">\n      <span className=\"visually-hidden\">Loading...</span>\n    </Spinner>\n  );\n};\n\nconst App = () => {\n  const [tasks, setTasks] = useState([]);\n\n  const {\n    isLoading,\n    sendRequest: fetchAllTasks,\n    error: isAllTasksError,\n  } = useHttp();\n\n  useEffect(() => {\n    const allTaskHandler = (data) => {\n      if (!isAllTasksError) {\n        setTasks(data);\n      }\n    };\n    fetchAllTasks(\n      {\n        url: \"https://shekhar-test-dcbe5-default-rtdb.firebaseio.com/tasks.json\",\n      },\n      allTaskHandler\n    );\n  }, [isAllTasksError]);\n\n  const TaskDeleteHandler = (id) => {\n    // setIsLoading(true);\n    // await fetch(\n    //   \"https://shekhar-test-dcbe5-default-rtdb.firebaseio.com/tasks/\" +\n    //     id +\n    //     \".json\",\n    //   {\n    //     method: \"DELETE\",\n    //     headers: { \"Content-Type\": \"application/json\" },\n    //   }\n    // );\n    // setIsLoading(false);\n    // const allTasks = tasks.filter((task) => id !== task.id);\n    // setTasks(allTasks);\n    const {\n      isLoading: isRunning,\n      sendRequest: deleteTask,\n      error: isDeleteError,\n    } = useHttp();\n\n    setIsLoading(isRunning);\n    useEffect(() => {\n      const deleteTaskHandler = (data) => {\n        if (!isDeleteError) {\n          console.log(data);\n        }\n      };\n      deleteTask(\n        {\n          url:\n            \"https://shekhar-test-dcbe5-default-rtdb.firebaseio.com/tasks/\" +\n            id +\n            \".json\",\n          method: \"DELETE\",\n        },\n        deleteTaskHandler\n      );\n    }, [isDeleteError]);\n  };\n\n  const addTaskHandler = async (data) => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(\n        \"https://shekhar-test-dcbe5-default-rtdb.firebaseio.com/tasks.json\",\n        {\n          method: \"POST\",\n          body: JSON.stringify(data),\n          headers: { \"Content-Type\": \"application/json\" },\n        }\n      );\n      const resp = await response.json();\n      data = { ...data, id: resp.name };\n      setTasks((prevTasks) => {\n        return [...prevTasks, data];\n      });\n    } catch (err) {\n      alert(\"Failed\");\n    }\n    setIsLoading(false);\n  };\n\n  const updateTaskHandler = async (updatedTask) => {\n    setIsLoading(true);\n    const id = updatedTask.id;\n    delete updatedTask.id;\n    await fetch(\n      `https://shekhar-test-dcbe5-default-rtdb.firebaseio.com/tasks/${id}.json`,\n      {\n        method: \"PATCH\",\n        body: JSON.stringify(updatedTask),\n        headers: { \"Content-Type\": \"application/json\" },\n      }\n    );\n    const latestTask = { ...updatedTask, id };\n    const allTasks = [];\n    for (const key in tasks) {\n      if (tasks[key].id === id) {\n        allTasks.push(latestTask);\n      } else {\n        allTasks.push(tasks[key]);\n      }\n    }\n    setTasks(allTasks);\n    setIsLoading(false);\n  };\n\n  return (\n    <div style={{ width: \"50%\", left: \"25%\", marginLeft: \"25%\" }}>\n      {isLoading &&\n        ReactDOM.createPortal(\n          <LoadingSpinner />,\n          document.getElementById(\"loading_spinner\")\n        )}\n      {isLoading &&\n        ReactDOM.createPortal(\n          <div className=\"backdrop-lay\"></div>,\n          document.getElementById(\"backdrop\")\n        )}\n      <Card>\n        <Card.Body className=\"add-task-card\">\n          <Accordion>\n            <Accordion.Header className=\"add-task-header\">\n              <Header name=\"Add Task\" />\n            </Accordion.Header>\n            <Accordion.Body>\n              <TaskForm onAddTask={addTaskHandler} />\n            </Accordion.Body>\n          </Accordion>\n        </Card.Body>\n      </Card>\n      <Card style={{ marginTop: \"2%\" }}>\n        <Card.Body>\n          <Header name=\"Total Tasks\" />\n          <TotalTasks\n            onUpdateTask={updateTaskHandler}\n            onTaskDelete={TaskDeleteHandler}\n            tasks={tasks}\n            isLoading={isLoading}\n          />\n        </Card.Body>\n      </Card>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}