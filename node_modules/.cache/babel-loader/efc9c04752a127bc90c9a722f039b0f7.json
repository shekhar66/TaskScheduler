{"ast":null,"code":"var _jsxFileName = \"/home/allareddisekharreddy/Aritic/Expenses/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport TaskForm from \"./Components/TaskForm\";\nimport Header from \"./Components/Header\";\nimport TotalTasks from \"./Components/TotalTasks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    const request = async () => {\n      setIsLoading(true);\n      const response = await fetch(\"https://shekhar-test-dcbe5-default-rtdb.firebaseio.com/tasks.json\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const data = await response.json();\n      const loadedTasks = [];\n\n      for (const taskKey in data) {\n        loadedTasks.push({\n          id: taskKey,\n          title: data[taskKey].title,\n          description: data[taskKey].description,\n          dueDate: data[taskKey].dueDate,\n          type: data[taskKey].type\n        });\n      }\n\n      setTasks(loadedTasks);\n      setIsLoading(false);\n    };\n\n    request();\n  }, []);\n\n  const addTaskHandler = async data => {\n    setIsLoading(true);\n    await fetch(\"https://shekhar-test-dcbe5-default-rtdb.firebaseio.com/tasks.json\", {\n      method: \"POST\",\n      body: JSON.stringify(data),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    setIsLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"50%\",\n      left: \"25%\",\n      marginLeft: \"25%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          name: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n          onAddTask: addTaskHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        marginTop: \"2%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(TotalTasks, {\n          tasks: tasks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"OVzUBSx2NbFmMswxqYZWIAAvy9Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/allareddisekharreddy/Aritic/Expenses/src/App.js"],"names":["React","useState","useEffect","Card","TaskForm","Header","TotalTasks","App","tasks","setTasks","isLoading","setIsLoading","request","response","fetch","method","headers","data","json","loadedTasks","taskKey","push","id","title","description","dueDate","type","addTaskHandler","body","JSON","stringify","width","left","marginLeft","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport TaskForm from \"./Components/TaskForm\";\nimport Header from \"./Components/Header\";\nimport TotalTasks from \"./Components/TotalTasks\";\n\nconst App = () => {\n  const [tasks, setTasks] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const request = async () => {\n      setIsLoading(true);\n      const response = await fetch(\n        \"https://shekhar-test-dcbe5-default-rtdb.firebaseio.com/tasks.json\",\n        {\n          method: \"GET\",\n          headers: { \"Content-Type\": \"application/json\" },\n        }\n      );\n      const data = await response.json();\n      const loadedTasks = [];\n      for (const taskKey in data) {\n        loadedTasks.push({\n          id: taskKey,\n          title: data[taskKey].title,\n          description: data[taskKey].description,\n          dueDate: data[taskKey].dueDate,\n          type: data[taskKey].type,\n        });\n      }\n      setTasks(loadedTasks);\n      setIsLoading(false);\n    };\n    request();\n  }, []);\n\n  const addTaskHandler = async (data) => {\n    setIsLoading(true);\n    await fetch(\n      \"https://shekhar-test-dcbe5-default-rtdb.firebaseio.com/tasks.json\",\n      {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: { \"Content-Type\": \"application/json\" },\n      }\n    );\n    setIsLoading(false);\n  };\n  return (\n    <div style={{ width: \"50%\", left: \"25%\", marginLeft: \"25%\" }}>\n      <Card>\n        <Card.Body>\n          <Header name=\"Add Task\" />\n          <TaskForm onAddTask={addTaskHandler} />\n        </Card.Body>\n      </Card>\n      <Card style={{ marginTop: \"2%\" }}>\n        <Card.Body>\n          <TotalTasks tasks={tasks} />\n        </Card.Body>\n      </Card>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}