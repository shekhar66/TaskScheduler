{"ast":null,"code":"var _jsxFileName = \"/home/allareddisekharreddy/Aritic/Expenses/src/Components/TaskForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useReducer } from \"react\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\nimport \"../UI/overwrite.css\";\nimport TaskReducer from \"../Reducers/TaskReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskForm = props => {\n  _s();\n\n  // const [title, setTitle] = useState(\"\");\n  // const [isTitleValid, setIsTitleValid] = useState(true);\n  // const [description, setDescription] = useState(\"\");\n  // const [isDescriptionValid, setIsDescriptionValid] = useState(true);\n  // const [dueDate, setDueDate] = useState(\"\");\n  // const [isDueDateValid, setIsDueDateValid] = useState(true);\n  // const [type, setType] = useState(\"\");\n  // const [isTypeValid, setIsTypeValid] = useState(true);\n  const initialState = {\n    title: \"\",\n    isTitleValid: true,\n    description: \"\",\n    isDescriptionValid: true,\n    dueDate: \"\",\n    isDueDateValid: true,\n    type: \"\",\n    isTypeValid: true\n  };\n  const [taskState, dispatchTaskData] = useReducer(TaskReducer, initialState);\n\n  const ValidateInput = event => {\n    switch (event.target.id) {\n      case \"task_title\":\n        setIsTitleValid(event.target.value);\n        break;\n\n      case \"task_description\":\n        setIsDescriptionValid(event.target.value);\n        break;\n\n      case \"task_due_date\":\n        setIsDueDateValid(event.target.value);\n        break;\n\n      case \"task_type\":\n        setIsTypeValid(event.target.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const titleChangeHandler = event => {\n    setTitle(event.target.value);\n    ValidateInput(event);\n  };\n\n  const descriptionChangeHandler = event => {\n    setDescription(event.target.value);\n    ValidateInput(event);\n  };\n\n  const dueDateChangeHandler = event => {\n    setDueDate(event.target.value);\n    ValidateInput(event);\n  };\n\n  const taskTypeChangeHandler = event => {\n    setType(event.target.value);\n    ValidateInput(event);\n  };\n\n  const addTaskHandler = event => {\n    event.preventDefault();\n\n    if (title && description && dueDate && type) {\n      props.onAddTask({\n        title,\n        description,\n        dueDate,\n        type\n      });\n      setTitle(\"\");\n      setDescription(\"\");\n      setDueDate(\"\");\n      setType(\"\");\n    }\n\n    if (!title) {\n      setIsTitleValid(false);\n    }\n\n    if (!description) {\n      setIsDescriptionValid(false);\n    }\n\n    if (!dueDate) {\n      setIsDueDateValid(false);\n    }\n\n    if (!type) {\n      setIsTypeValid(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: addTaskHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: `form-label ${!isTitleValid ? \"invalid\" : \"\"}`,\n        htmlFor: \"task_title\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"task_title\",\n        type: \"text\",\n        className: `form-control ${!isTitleValid ? \"invalid\" : \"\"}`,\n        onChange: titleChangeHandler,\n        value: title,\n        placeholder: \"This field is required...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: `form-label ${!isDescriptionValid ? \"invalid\" : \"\"}`,\n        htmlFor: \"task_description\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"task_description\",\n        type: \"textarea\",\n        className: `form-control ${!isDescriptionValid ? \"invalid\" : \"\"}`,\n        onChange: descriptionChangeHandler,\n        value: description,\n        placeholder: \"This field is required...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        paddingRight: \"0px\",\n        paddingLeft: \"0px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: `form-label ${!isDueDateValid ? \"invalid\" : \"\"}`,\n            htmlFor: \"task_due_date\",\n            children: \"Closure Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"task_due_date\",\n            type: \"date\",\n            className: `form-control ${!isDueDateValid ? \"invalid\" : \"\"}`,\n            onChange: dueDateChangeHandler,\n            value: dueDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: `form-label ${!isTypeValid ? \"invalid\" : \"\"}`,\n            htmlFor: \"task_type\",\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: `form-control ${!isTypeValid ? \"invalid\" : \"\"}`,\n            id: \"task_type\",\n            onChange: taskTypeChangeHandler,\n            value: type,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Call\",\n              children: \"Call\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Meeting\",\n              children: \"Meeting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"10px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          float: \"right\",\n          marginBottom: \"8px\"\n        },\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TaskForm, \"SEfMp92jRV3u734xchpavZqlJ6w=\");\n\n_c = TaskForm;\nexport default TaskForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"sources":["/home/allareddisekharreddy/Aritic/Expenses/src/Components/TaskForm.js"],"names":["useState","useReducer","Button","Container","Row","Col","TaskReducer","TaskForm","props","initialState","title","isTitleValid","description","isDescriptionValid","dueDate","isDueDateValid","type","isTypeValid","taskState","dispatchTaskData","ValidateInput","event","target","id","setIsTitleValid","value","setIsDescriptionValid","setIsDueDateValid","setIsTypeValid","titleChangeHandler","setTitle","descriptionChangeHandler","setDescription","dueDateChangeHandler","setDueDate","taskTypeChangeHandler","setType","addTaskHandler","preventDefault","onAddTask","paddingRight","paddingLeft","marginTop","float","marginBottom"],"mappings":"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","sourcesContent":["import { useState, useReducer } from \"react\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\nimport \"../UI/overwrite.css\";\nimport TaskReducer from \"../Reducers/TaskReducer\";\n\nconst TaskForm = (props) => {\n  // const [title, setTitle] = useState(\"\");\n  // const [isTitleValid, setIsTitleValid] = useState(true);\n  // const [description, setDescription] = useState(\"\");\n  // const [isDescriptionValid, setIsDescriptionValid] = useState(true);\n  // const [dueDate, setDueDate] = useState(\"\");\n  // const [isDueDateValid, setIsDueDateValid] = useState(true);\n  // const [type, setType] = useState(\"\");\n  // const [isTypeValid, setIsTypeValid] = useState(true);\n  const initialState = {\n    title: \"\",\n    isTitleValid: true,\n    description: \"\",\n    isDescriptionValid: true,\n    dueDate: \"\",\n    isDueDateValid: true,\n    type: \"\",\n    isTypeValid: true,\n  };\n  const [taskState, dispatchTaskData] = useReducer(TaskReducer, initialState);\n\n  const ValidateInput = (event) => {\n    switch (event.target.id) {\n      case \"task_title\":\n        setIsTitleValid(event.target.value);\n        break;\n      case \"task_description\":\n        setIsDescriptionValid(event.target.value);\n        break;\n      case \"task_due_date\":\n        setIsDueDateValid(event.target.value);\n        break;\n      case \"task_type\":\n        setIsTypeValid(event.target.value);\n        break;\n      default:\n        break;\n    }\n  };\n  const titleChangeHandler = (event) => {\n    setTitle(event.target.value);\n    ValidateInput(event);\n  };\n  const descriptionChangeHandler = (event) => {\n    setDescription(event.target.value);\n    ValidateInput(event);\n  };\n  const dueDateChangeHandler = (event) => {\n    setDueDate(event.target.value);\n    ValidateInput(event);\n  };\n\n  const taskTypeChangeHandler = (event) => {\n    setType(event.target.value);\n    ValidateInput(event);\n  };\n\n  const addTaskHandler = (event) => {\n    event.preventDefault();\n    if (title && description && dueDate && type) {\n      props.onAddTask({ title, description, dueDate, type });\n      setTitle(\"\");\n      setDescription(\"\");\n      setDueDate(\"\");\n      setType(\"\");\n    }\n    if (!title) {\n      setIsTitleValid(false);\n    }\n    if (!description) {\n      setIsDescriptionValid(false);\n    }\n    if (!dueDate) {\n      setIsDueDateValid(false);\n    }\n    if (!type) {\n      setIsTypeValid(false);\n    }\n  };\n  return (\n    <form onSubmit={addTaskHandler}>\n      <div>\n        <label\n          className={`form-label ${!isTitleValid ? \"invalid\" : \"\"}`}\n          htmlFor=\"task_title\"\n        >\n          Title\n        </label>\n        <input\n          id=\"task_title\"\n          type=\"text\"\n          className={`form-control ${!isTitleValid ? \"invalid\" : \"\"}`}\n          onChange={titleChangeHandler}\n          value={title}\n          placeholder=\"This field is required...\"\n        />\n      </div>\n      <div>\n        <label\n          className={`form-label ${!isDescriptionValid ? \"invalid\" : \"\"}`}\n          htmlFor=\"task_description\"\n        >\n          Description\n        </label>\n        <input\n          id=\"task_description\"\n          type=\"textarea\"\n          className={`form-control ${!isDescriptionValid ? \"invalid\" : \"\"}`}\n          onChange={descriptionChangeHandler}\n          value={description}\n          placeholder=\"This field is required...\"\n        />\n      </div>\n      <Container style={{ paddingRight: \"0px\", paddingLeft: \"0px\" }}>\n        <Row>\n          <Col>\n            <label\n              className={`form-label ${!isDueDateValid ? \"invalid\" : \"\"}`}\n              htmlFor=\"task_due_date\"\n            >\n              Closure Date\n            </label>\n            <input\n              id=\"task_due_date\"\n              type=\"date\"\n              className={`form-control ${!isDueDateValid ? \"invalid\" : \"\"}`}\n              onChange={dueDateChangeHandler}\n              value={dueDate}\n            />\n          </Col>\n          <Col>\n            <label\n              className={`form-label ${!isTypeValid ? \"invalid\" : \"\"}`}\n              htmlFor=\"task_type\"\n            >\n              Type\n            </label>\n            <select\n              className={`form-control ${!isTypeValid ? \"invalid\" : \"\"}`}\n              id=\"task_type\"\n              onChange={taskTypeChangeHandler}\n              value={type}\n            >\n              <option value=\"\"></option>\n              <option value=\"Call\">Call</option>\n              <option value=\"Email\">Email</option>\n              <option value=\"Meeting\">Meeting</option>\n            </select>\n          </Col>\n        </Row>\n      </Container>\n      <div style={{ marginTop: \"10px\" }}>\n        <Button style={{ float: \"right\", marginBottom: \"8px\" }} type=\"submit\">\n          Add\n        </Button>\n      </div>\n    </form>\n  );\n};\n\nexport default TaskForm;\n"]},"metadata":{},"sourceType":"module"}