{"ast":null,"code":"var _jsxFileName = \"/home/allareddisekharreddy/Aritic/TasksScheduler/src/Components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport TaskForm from \"./TaskForm\";\nimport TotalTasks from \"./TotalTasks\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const isLoading = useSelector(prevState => {\n    return prevState.isLoading;\n  });\n  useEffect(() => {\n    dispatch({\n      type: \"loading\",\n      loading: true\n    });\n\n    const request = async () => {\n      const response = await fetch(\"https://shekhar-test-dcbe5-default-rtdb.firebaseio.com/tasks.json\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const data = await response.json();\n      const loadedTasks = [];\n\n      for (const taskKey in data) {\n        loadedTasks.push({\n          id: taskKey,\n          title: data[taskKey].title,\n          description: data[taskKey].description,\n          dueDate: data[taskKey].dueDate,\n          type: data[taskKey].type\n        });\n      }\n\n      dispatch({\n        type: \"fetch\",\n        tasks: loadedTasks\n      });\n      dispatch({\n        type: \"loading\",\n        loading: false\n      });\n    };\n\n    request();\n  }, [dispatch]);\n  const tasks = useSelector(prevTasks => {\n    return prevTasks.tasks;\n  });\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TotalTasks, {\n      tasks: tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"TAazoOxdlnaiNpUfFWE8jF9kZp0=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/allareddisekharreddy/Aritic/TasksScheduler/src/Components/Main.js"],"names":["React","useEffect","TaskForm","TotalTasks","useSelector","useDispatch","LoadingSpinner","Main","props","dispatch","isLoading","prevState","type","loading","request","response","fetch","method","headers","data","json","loadedTasks","taskKey","push","id","title","description","dueDate","tasks","prevTasks"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,SAAS,GAAGN,WAAW,CAAEO,SAAD,IAAe;AAC3C,WAAOA,SAAS,CAACD,SAAjB;AACD,GAF4B,CAA7B;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,OAAO,EAAE;AAA5B,KAAD,CAAR;;AACA,UAAMC,OAAO,GAAG,YAAY;AAC1B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,mEAD0B,EAE1B;AACEC,QAAAA,MAAM,EAAE,KADV;AAEEC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB;AAFX,OAF0B,CAA5B;AAOA,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AAEA,YAAMC,WAAW,GAAG,EAApB;;AACA,WAAK,MAAMC,OAAX,IAAsBH,IAAtB,EAA4B;AAC1BE,QAAAA,WAAW,CAACE,IAAZ,CAAiB;AACfC,UAAAA,EAAE,EAAEF,OADW;AAEfG,UAAAA,KAAK,EAAEN,IAAI,CAACG,OAAD,CAAJ,CAAcG,KAFN;AAGfC,UAAAA,WAAW,EAAEP,IAAI,CAACG,OAAD,CAAJ,CAAcI,WAHZ;AAIfC,UAAAA,OAAO,EAAER,IAAI,CAACG,OAAD,CAAJ,CAAcK,OAJR;AAKff,UAAAA,IAAI,EAAEO,IAAI,CAACG,OAAD,CAAJ,CAAcV;AALL,SAAjB;AAOD;;AACDH,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,OAAR;AAAiBgB,QAAAA,KAAK,EAAEP;AAAxB,OAAD,CAAR;AACAZ,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,SAAR;AAAmBC,QAAAA,OAAO,EAAE;AAA5B,OAAD,CAAR;AACD,KAtBD;;AAuBAC,IAAAA,OAAO;AACR,GA1BQ,EA0BN,CAACL,QAAD,CA1BM,CAAT;AA2BA,QAAMmB,KAAK,GAAGxB,WAAW,CAAEyB,SAAD,IAAe;AACvC,WAAOA,SAAS,CAACD,KAAjB;AACD,GAFwB,CAAzB;AAGA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,eACGlB,SAAS,iBAAI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YADhB,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,UAAD;AAAY,MAAA,KAAK,EAAEkB;AAAnB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA3CD;;GAAMrB,I;UACaF,W,EACCD,W,EA+BJA,W;;;KAjCVG,I;AA6CN,eAAeA,IAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport TaskForm from \"./TaskForm\";\nimport TotalTasks from \"./TotalTasks\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport LoadingSpinner from \"./LoadingSpinner\";\n\nconst Main = (props) => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector((prevState) => {\n    return prevState.isLoading;\n  });\n\n  useEffect(() => {\n    dispatch({ type: \"loading\", loading: true });\n    const request = async () => {\n      const response = await fetch(\n        \"https://shekhar-test-dcbe5-default-rtdb.firebaseio.com/tasks.json\",\n        {\n          method: \"GET\",\n          headers: { \"Content-Type\": \"application/json\" },\n        }\n      );\n      const data = await response.json();\n\n      const loadedTasks = [];\n      for (const taskKey in data) {\n        loadedTasks.push({\n          id: taskKey,\n          title: data[taskKey].title,\n          description: data[taskKey].description,\n          dueDate: data[taskKey].dueDate,\n          type: data[taskKey].type,\n        });\n      }\n      dispatch({ type: \"fetch\", tasks: loadedTasks });\n      dispatch({ type: \"loading\", loading: false });\n    };\n    request();\n  }, [dispatch]);\n  const tasks = useSelector((prevTasks) => {\n    return prevTasks.tasks;\n  });\n  return (\n    <React.Fragment>\n      {isLoading && <LoadingSpinner />}\n      <TaskForm />\n      <TotalTasks tasks={tasks} />\n    </React.Fragment>\n  );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}