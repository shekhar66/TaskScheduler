{"ast":null,"code":"var _jsxFileName = \"/home/allareddisekharreddy/Aritic/TasksScheduler/src/Components/TaskFilter.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskFilter = props => {\n  _s();\n\n  const tasks = useSelector(prevTasks => {\n    return prevTasks.tasks;\n  });\n  const dispatch = useDispatch();\n\n  const filterTasksHandler = event => {\n    let filteredTasks = tasks;\n\n    if (event.target.value !== \" \") {\n      console.log(\"aaaaaaaaaaa\");\n      filteredTasks = tasks.filter(task => {\n        return task.title.includes(event.target.value);\n      });\n    }\n\n    dispatch({\n      type: \"fetch\",\n      tasks: filteredTasks\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: tasks && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-filter\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"task_filter\",\n        type: \"text\",\n        className: `form-control`,\n        onChange: filterTasksHandler,\n        placeholder: \"Filter by title..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TaskFilter, \"CsZaW/tJMRku090Oh9Epf38CEO8=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = TaskFilter;\nexport default TaskFilter;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskFilter\");","map":{"version":3,"sources":["/home/allareddisekharreddy/Aritic/TasksScheduler/src/Components/TaskFilter.js"],"names":["useSelector","useDispatch","React","TaskFilter","props","tasks","prevTasks","dispatch","filterTasksHandler","event","filteredTasks","target","value","console","log","filter","task","title","includes","type"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAMC,KAAK,GAAGL,WAAW,CAAEM,SAAD,IAAe;AACvC,WAAOA,SAAS,CAACD,KAAjB;AACD,GAFwB,CAAzB;AAGA,QAAME,QAAQ,GAAGN,WAAW,EAA5B;;AACA,QAAMO,kBAAkB,GAAIC,KAAD,IAAW;AACpC,QAAIC,aAAa,GAAGL,KAApB;;AACA,QAAII,KAAK,CAACE,MAAN,CAAaC,KAAb,KAAuB,GAA3B,EAAgC;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAJ,MAAAA,aAAa,GAAGL,KAAK,CAACU,MAAN,CAAcC,IAAD,IAAU;AACrC,eAAOA,IAAI,CAACC,KAAL,CAAWC,QAAX,CAAoBT,KAAK,CAACE,MAAN,CAAaC,KAAjC,CAAP;AACD,OAFe,CAAhB;AAGD;;AACDL,IAAAA,QAAQ,CAAC;AAAEY,MAAAA,IAAI,EAAE,OAAR;AAAiBd,MAAAA,KAAK,EAAEK;AAAxB,KAAD,CAAR;AACD,GATD;;AAUA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,cACGL,KAAK,iBACJ;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACE;AACE,QAAA,EAAE,EAAC,aADL;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,SAAS,EAAG,cAHd;AAIE,QAAA,QAAQ,EAAEG,kBAJZ;AAKE,QAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA9BD;;GAAML,U;UACUH,W,EAGGC,W;;;KAJbE,U;AAgCN,eAAeA,UAAf","sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\nimport React from \"react\";\n\nconst TaskFilter = (props) => {\n  const tasks = useSelector((prevTasks) => {\n    return prevTasks.tasks;\n  });\n  const dispatch = useDispatch();\n  const filterTasksHandler = (event) => {\n    let filteredTasks = tasks;\n    if (event.target.value !== \" \") {\n      console.log(\"aaaaaaaaaaa\");\n      filteredTasks = tasks.filter((task) => {\n        return task.title.includes(event.target.value);\n      });\n    }\n    dispatch({ type: \"fetch\", tasks: filteredTasks });\n  };\n  return (\n    <React.Fragment>\n      {tasks && (\n        <div className=\"task-filter\">\n          <input\n            id=\"task_filter\"\n            type=\"text\"\n            className={`form-control`}\n            onChange={filterTasksHandler}\n            placeholder=\"Filter by title..\"\n          />\n        </div>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default TaskFilter;\n"]},"metadata":{},"sourceType":"module"}