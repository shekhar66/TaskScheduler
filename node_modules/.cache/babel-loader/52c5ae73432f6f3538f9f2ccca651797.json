{"ast":null,"code":"var _jsxFileName = \"/home/allareddisekharreddy/Aritic/TasksScheduler/src/Components/Content/Task/TotalTasks.js\",\n    _s = $RefreshSig$();\n\nimport { Accordion, Table, Button, Card } from \"react-bootstrap\";\nimport EditTaskForm from \"./EditTaskForm\";\nimport Header from \"./Header\";\nimport \"../../../Assets/TotalTasks.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport TaskFilter from \"./TaskFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TotalTasks = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const isLoading = useSelector(prevState => {\n    return prevState.isLoading;\n  });\n\n  let content = /*#__PURE__*/_jsxDEV(Header, {\n    name: isLoading ? \"Loading....!!!!\" : \"No Tasks Found..!! Try by adding new..!!\",\n    style: {\n      color: \"darkslateblue\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n\n  const deleteTaskHandler = async event => {\n    dispatch({\n      type: \"loading\",\n      loading: true\n    });\n\n    try {\n      await fetch(\"https://shekhar-test-dcbe5-default-rtdb.firebaseio.com/tasks/\" + event.target.id + \".json\", {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      dispatch({\n        type: \"delete\",\n        taskId: event.target.id\n      });\n      dispatch({\n        type: \"loading\",\n        loading: false\n      });\n      dispatch({\n        type: \"notification\",\n        notification: {\n          message: \"Task has been deleted sucessfully..!!!\",\n          color: \"red\"\n        }\n      });\n    } catch (err) {}\n  };\n\n  if (props.tasks.length) {\n    content = /*#__PURE__*/_jsxDEV(Accordion, {\n      children: props.tasks.map((task, index) => {\n        return /*#__PURE__*/_jsxDEV(Accordion.Item, {\n          eventKey: index,\n          children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                float: \"right\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(EditTaskForm, {\n                taskid: task.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                id: task.id,\n                onClick: deleteTaskHandler,\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Title\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: task.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: task.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: task.type\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Closure Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: task.dueDate\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"total-tasks-card\",\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        name: \"Total Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"hr-tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskFilter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), content]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TotalTasks, \"ZafohTLN5Z6ViWS+L4c7tftSWPk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = TotalTasks;\nexport default TotalTasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"TotalTasks\");","map":{"version":3,"sources":["/home/allareddisekharreddy/Aritic/TasksScheduler/src/Components/Content/Task/TotalTasks.js"],"names":["Accordion","Table","Button","Card","EditTaskForm","Header","useDispatch","useSelector","TaskFilter","TotalTasks","props","dispatch","isLoading","prevState","content","color","deleteTaskHandler","event","type","loading","fetch","target","id","method","headers","taskId","notification","message","err","tasks","length","map","task","index","title","float","description","dueDate"],"mappings":"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","sourcesContent":["import { Accordion, Table, Button, Card } from \"react-bootstrap\";\nimport EditTaskForm from \"./EditTaskForm\";\nimport Header from \"./Header\";\nimport \"../../../Assets/TotalTasks.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport TaskFilter from \"./TaskFilter\";\n\nconst TotalTasks = (props) => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector((prevState) => {\n    return prevState.isLoading;\n  });\n  let content = (\n    <Header\n      name={\n        isLoading\n          ? \"Loading....!!!!\"\n          : \"No Tasks Found..!! Try by adding new..!!\"\n      }\n      style={{ color: \"darkslateblue\" }}\n    />\n  );\n\n  const deleteTaskHandler = async (event) => {\n    dispatch({ type: \"loading\", loading: true });\n    try {\n      await fetch(\n        \"https://shekhar-test-dcbe5-default-rtdb.firebaseio.com/tasks/\" +\n          event.target.id +\n          \".json\",\n        {\n          method: \"DELETE\",\n          headers: { \"Content-Type\": \"application/json\" },\n        }\n      );\n      dispatch({ type: \"delete\", taskId: event.target.id });\n      dispatch({ type: \"loading\", loading: false });\n      dispatch({\n        type: \"notification\",\n        notification: {\n          message: \"Task has been deleted sucessfully..!!!\",\n          color: \"red\",\n        },\n      });\n    } catch (err) {}\n  };\n  if (props.tasks.length) {\n    content = (\n      <Accordion>\n        {props.tasks.map((task, index) => {\n          return (\n            <Accordion.Item eventKey={index} key={index}>\n              <Accordion.Header>{task.title}</Accordion.Header>\n              <Accordion.Body>\n                <div style={{ float: \"right\" }}>\n                  <EditTaskForm taskid={task.id} />\n                  <Button id={task.id} onClick={deleteTaskHandler}>\n                    Delete\n                  </Button>{\" \"}\n                </div>\n                <Table>\n                  <tbody>\n                    <tr>\n                      <th>Title</th>\n                      <td>{task.title}</td>\n                    </tr>\n                    <tr>\n                      <th>Description</th>\n                      <td>{task.description}</td>\n                    </tr>\n                    <tr>\n                      <th>Type</th>\n                      <td>{task.type}</td>\n                    </tr>\n                    <tr>\n                      <th>Closure Date</th>\n                      <td>{task.dueDate}</td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Accordion.Body>\n            </Accordion.Item>\n          );\n        })}\n      </Accordion>\n    );\n  }\n  return (\n    <Card className=\"total-tasks-card\">\n      <Card.Body>\n        <Header name=\"Total Tasks\" />\n        <hr className=\"hr-tasks\"></hr>\n        <TaskFilter />\n        {content}\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default TotalTasks;\n"]},"metadata":{},"sourceType":"module"}