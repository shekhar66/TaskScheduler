{"ast":null,"code":"var _jsxFileName = \"/home/allareddisekharreddy/Aritic/Expenses/src/Components/EditTaskForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { Button, Offcanvas } from \"react-bootstrap\";\nimport TaskForm from \"./TaskForm\";\nimport ReactDOM from \"react-dom\";\nimport { LoadingSpinner } from \"../App\";\nimport TaskContext from \"../Context/task-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditTaskForm = props => {\n  _s();\n\n  const taskCtx = useContext(TaskContext);\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [taskDetails, setTaskDetals] = useState({});\n\n  const handleShow = () => {\n    const request = async taskId => {\n      if (props.taskid) {\n        setIsLoading(true);\n        const response = await fetch(`https://shekhar-test-dcbe5-default-rtdb.firebaseio.com/tasks/${props.taskid}.json`, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        const data = await response.json();\n        setTaskDetals(data);\n        setIsLoading(false);\n        setShow(true);\n      }\n    };\n\n    request();\n  };\n\n  const addTaskHandler = async data => {\n    setIsLoading(true);\n    setShow(false);\n    const response = await fetch(`https://shekhar-test-dcbe5-default-rtdb.firebaseio.com/tasks/${props.taskid}.json`, {\n      method: \"PATCH\",\n      body: JSON.stringify(data),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const resp = await response.json();\n    console.log(taskCtx);\n    setIsLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [isLoading && /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this), document.getElementById(\"loading_spinner\")), isLoading && /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"backdrop-lay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this), document.getElementById(\"backdrop\")), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleShow,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Offcanvas, {\n      show: show,\n      onHide: handleClose,\n      placement: \"end\",\n      children: [/*#__PURE__*/_jsxDEV(Offcanvas.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Offcanvas.Title, {\n          children: \"Edit Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Offcanvas.Body, {\n        children: /*#__PURE__*/_jsxDEV(TaskForm, {\n          onAddTask: addTaskHandler,\n          taskDetails: taskDetails\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditTaskForm, \"BIq3R+kaHuLmzkpkVN2n32vnbfw=\");\n\n_c = EditTaskForm;\nexport default EditTaskForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditTaskForm\");","map":{"version":3,"sources":["/home/allareddisekharreddy/Aritic/Expenses/src/Components/EditTaskForm.js"],"names":["React","useState","useContext","Button","Offcanvas","TaskForm","ReactDOM","LoadingSpinner","TaskContext","EditTaskForm","props","taskCtx","show","setShow","handleClose","isLoading","setIsLoading","taskDetails","setTaskDetals","handleShow","request","taskId","taskid","response","fetch","method","headers","data","json","addTaskHandler","body","JSON","stringify","resp","console","log","createPortal","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { Button, Offcanvas } from \"react-bootstrap\";\nimport TaskForm from \"./TaskForm\";\nimport ReactDOM from \"react-dom\";\nimport { LoadingSpinner } from \"../App\";\nimport TaskContext from \"../Context/task-context\";\n\nconst EditTaskForm = (props) => {\n  const taskCtx = useContext(TaskContext);\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [taskDetails, setTaskDetals] = useState({});\n\n  const handleShow = () => {\n    const request = async (taskId) => {\n      if (props.taskid) {\n        setIsLoading(true);\n        const response = await fetch(\n          `https://shekhar-test-dcbe5-default-rtdb.firebaseio.com/tasks/${props.taskid}.json`,\n          {\n            method: \"GET\",\n            headers: { \"Content-Type\": \"application/json\" },\n          }\n        );\n        const data = await response.json();\n        setTaskDetals(data);\n        setIsLoading(false);\n        setShow(true);\n      }\n    };\n    request();\n  };\n\n  const addTaskHandler = async (data) => {\n    setIsLoading(true);\n    setShow(false);\n    const response = await fetch(\n      `https://shekhar-test-dcbe5-default-rtdb.firebaseio.com/tasks/${props.taskid}.json`,\n      {\n        method: \"PATCH\",\n        body: JSON.stringify(data),\n        headers: { \"Content-Type\": \"application/json\" },\n      }\n    );\n    const resp = await response.json();\n    console.log(taskCtx);\n    setIsLoading(false);\n  };\n\n  return (\n    <React.Fragment>\n      {isLoading &&\n        ReactDOM.createPortal(\n          <LoadingSpinner />,\n          document.getElementById(\"loading_spinner\")\n        )}\n      {isLoading &&\n        ReactDOM.createPortal(\n          <div className=\"backdrop-lay\"></div>,\n          document.getElementById(\"backdrop\")\n        )}\n      <Button onClick={handleShow}>Edit</Button>{\" \"}\n      <Offcanvas show={show} onHide={handleClose} placement=\"end\">\n        <Offcanvas.Header closeButton>\n          <Offcanvas.Title>Edit Task</Offcanvas.Title>\n        </Offcanvas.Header>\n        <Offcanvas.Body>\n          <TaskForm onAddTask={addTaskHandler} taskDetails={taskDetails} />\n        </Offcanvas.Body>\n      </Offcanvas>\n    </React.Fragment>\n  );\n};\n\nexport default EditTaskForm;\n"]},"metadata":{},"sourceType":"module"}